[INFO] GET / 200 in 6ms
[INFO] GET /@vite/client 304 in 1ms
[INFO] GET /src/main.tsx 304 in 1ms
[INFO] GET /@react-refresh 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 1ms
[INFO] GET /src/index.css 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 2ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 0ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 2ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 304 in 3ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 0ms
[INFO] GET /src/components/Logo.tsx 304 in 0ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/components/ui/input.tsx 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 0ms
[INFO] GET /src/hooks/use-audio.ts 304 in 0ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 0ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 0ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 0ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 0ms
[INFO] GET /src/components/ui/separator.tsx 304 in 1ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/label.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 0ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /api/user 401 in 2ms
[INFO] GET / 200 in 4ms
[INFO] POST /api/login 200 in 358ms
[INFO] GET /api/user 304 in 63ms
[INFO] GET / 200 in 62ms
[INFO] GET / 200 in 148ms
[INFO] GET /api/podcasts 304 in 289ms
[INFO] GET /api/playlists 304 in 287ms
[INFO] GET / 200 in 61ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[WARN] File not found in Object Storage: 1735659091645-article.mp3
[INFO] HEAD /api/audio/stream/1735659091645-article.mp3 404 in 157ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 51ms
[INFO] GET /@vite/client 304 in 15ms
[INFO] GET /@react-refresh 304 in 33ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /src/main.tsx 304 in 66ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 918ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 50ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 1ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 2ms
[INFO] GET /src/index.css 304 in 638ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 0ms
[INFO] GET /src/components/ui/form.tsx 304 in 0ms
[INFO] GET /src/components/Sidebar.tsx 304 in 0ms
[INFO] GET /src/hooks/use-toast.ts 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/components/ui/toast.tsx 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 0ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 0ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 0ms
[INFO] GET /src/hooks/use-tts.ts 304 in 0ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 304 in 0ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /src/components/ui/label.tsx 304 in 0ms
[INFO] GET /src/components/ui/separator.tsx 304 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 0ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 3ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 4ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /api/user 401 in 3ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 117ms
[INFO] GET /@vite/client 304 in 161ms
[INFO] GET /@react-refresh 304 in 127ms
[INFO] GET / 200 in 16ms
[INFO] GET /src/main.tsx 304 in 274ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 2219ms
[INFO] GET /@vite/client 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 2ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 2ms
[INFO] GET /src/main.tsx 304 in 7ms
[INFO] GET /src/index.css 304 in 1413ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 1ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 2ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] Server started successfully on port 4000
[INFO] GET / 200 in 36ms
[INFO] GET /@vite/client 304 in 51ms
[INFO] GET /src/main.tsx 304 in 73ms
[INFO] GET /@react-refresh 304 in 45ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 385ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 200 in 2ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 200 in 1ms
[INFO] GET /src/components/ui/button.tsx 200 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 200 in 0ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 200 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 1ms
[INFO] GET /src/index.css 304 in 1602ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 0ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/components/ui/toast.tsx 200 in 1ms
[INFO] GET /src/hooks/use-toast.ts 200 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 200 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 200 in 0ms
[INFO] GET /src/lib/utils.ts 200 in 1ms
[INFO] GET /src/hooks/use-tts.ts 200 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 200 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 200 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 200 in 1ms
[INFO] GET /src/components/ui/form.tsx 200 in 0ms
[INFO] GET /src/components/ui/alert-dialog.tsx 200 in 1ms
[INFO] GET /src/hooks/use-audio.ts 200 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 200 in 1ms
[INFO] GET /src/components/ui/card.tsx 200 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 200 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 200 in 1ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /src/components/ui/label.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 2ms
[INFO] GET /src/components/ui/select.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 0ms
[INFO] GET /api/user 401 in 3ms
[INFO] GET / 200 in 5ms
[INFO] GET /@react-refresh 200 in 1ms
[INFO] GET /@vite/client 304 in 1ms
[INFO] GET /src/main.tsx 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 200 in 2ms
[INFO] GET /src/index.css 200 in 2ms
[INFO] GET /src/lib/queryClient.ts 200 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 200 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 200 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 0ms
[INFO] GET /src/pages/PricingPage.tsx 200 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 200 in 1ms
[INFO] GET /src/pages/ProfilePage.tsx 200 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 200 in 1ms
[INFO] GET /src/components/Sidebar.tsx 200 in 1ms
[INFO] GET /src/hooks/use-user.ts 200 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 200 in 1ms
[INFO] GET /src/components/ui/button.tsx 200 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 0ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 200 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 1ms
[INFO] GET /src/components/ui/toast.tsx 304 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 0ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 200 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 200 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 200 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 200 in 2ms
[INFO] GET /src/components/ui/label.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 0ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /api/user 401 in 1ms
[INFO] GET / 200 in 9ms
[INFO] POST /api/login 200 in 359ms
[INFO] GET /api/user 304 in 59ms
[INFO] GET / 200 in 136ms
[INFO] GET /api/playlists 304 in 224ms
[INFO] GET / 200 in 235ms
[INFO] GET /api/podcasts 304 in 341ms
[INFO] GET / 200 in 59ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[WARN] File not found in Object Storage: 1735659091645-article.mp3
[INFO] HEAD /api/audio/stream/1735659091645-article.mp3 404 in 167ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 49ms
[INFO] GET /@vite/client 304 in 44ms
[INFO] GET /src/main.tsx 304 in 75ms
[INFO] GET /@react-refresh 304 in 55ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 1092ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 97ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 0ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/index.css 304 in 1480ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 0ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 4ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 304 in 2ms
[INFO] GET /src/hooks/use-audio.ts 304 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 7ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /src/hooks/use-tts.ts 304 in 1ms
[INFO] GET /src/components/Logo.tsx 304 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/components/ui/toast.tsx 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 0ms
[INFO] GET /src/components/ui/select.tsx 304 in 0ms
[INFO] GET /src/components/ui/popover.tsx 304 in 0ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /src/components/ui/label.tsx 304 in 0ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /api/user 401 in 3ms
[INFO] GET / 200 in 5ms
[INFO] GET /@vite/client 304 in 1ms
[INFO] GET /src/main.tsx 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 0ms
[INFO] GET /@react-refresh 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 0ms
[INFO] GET /src/index.css 304 in 0ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 0ms
[INFO] GET /src/pages/HomePage.tsx 304 in 0ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 0ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 0ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 0ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 2ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 0ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/components/Logo.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 0ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /src/components/ui/input.tsx 304 in 0ms
[INFO] GET /src/hooks/use-audio.ts 304 in 1ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 0ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 0ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 0ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 0ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 0ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 0ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/label.tsx 304 in 0ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /api/user 401 in 2ms
[INFO] GET / 200 in 3ms
[INFO] POST /api/login 200 in 443ms
[INFO] GET /api/user 304 in 63ms
[INFO] GET / 200 in 64ms
[INFO] GET /api/playlists 304 in 118ms
[INFO] GET / 200 in 104ms
[INFO] GET /api/podcasts 304 in 216ms
[INFO] GET / 200 in 64ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] HEAD /api/audio/stream/1735659091645-article.mp3 200 in 973ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 1097ms
[INFO] GET / 200 in 467ms
[INFO] GET / 204 in 61ms
[INFO] GET / 204 in 113ms
[INFO] GET / 200 in 73ms
[INFO] GET / 200 in 71ms
[INFO] GET /@vite/client 304 in 62ms
[INFO] GET /src/main.tsx 304 in 60ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 88ms
[INFO] GET /@react-refresh 304 in 70ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 97ms
[INFO] GET /node_modules/.vite/deps/react_jsx-dev-runtime.js 200 in 109ms
[INFO] GET /@vite/client 304 in 166ms
[INFO] GET /src/main.tsx 304 in 233ms
[INFO] GET /node_modules/.vite/deps/react.js 200 in 247ms
[INFO] GET /node_modules/.vite/deps/react-dom_client.js 200 in 269ms
[INFO] GET /node_modules/.vite/deps/wouter.js 200 in 215ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 269ms
[INFO] GET /@react-refresh 304 in 247ms
[INFO] GET /src/index.css 304 in 245ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/index.js 200 in 247ms
[INFO] GET /src/lib/queryClient.ts 304 in 244ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 238ms
[INFO] GET /src/index.css 304 in 240ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 307ms
[INFO] GET /src/pages/HomePage.tsx 304 in 306ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 312ms
[INFO] GET /src/lib/queryClient.ts 304 in 290ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 307ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 208ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 214ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 223ms
[INFO] GET /src/pages/HomePage.tsx 304 in 237ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 301ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 302ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 308ms
[INFO] GET /node_modules/.vite/deps/lucide-react.js 200 in 306ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 314ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 225ms
[INFO] GET /src/hooks/use-user.ts 304 in 229ms
[INFO] GET /src/components/Sidebar.tsx 304 in 238ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 189ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 178ms
[INFO] GET /src/components/ui/button.tsx 304 in 187ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 185ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 187ms
[INFO] GET /node_modules/.vite/deps/chunk-KGBGKWGZ.js 200 in 193ms
[INFO] GET /src/hooks/use-user.ts 304 in 238ms
[INFO] GET /node_modules/.vite/deps/chunk-DC5AMYBS.js 200 in 243ms
[INFO] GET /node_modules/.vite/deps/chunk-WE2PF65S.js 200 in 252ms
[INFO] GET /src/components/Sidebar.tsx 304 in 251ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/index.js 200 in 216ms
[INFO] GET /src/components/ui/button.tsx 304 in 249ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/types.js 200 in 250ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 189ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useQueries.js 200 in 187ms
[INFO] GET /src/hooks/use-toast.ts 304 in 156ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useQuery.js 200 in 185ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js 200 in 232ms
[INFO] GET /src/components/ui/toast.tsx 304 in 252ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useSuspenseInfiniteQuery.js 200 in 238ms
[INFO] GET /src/hooks/use-tts.ts 304 in 248ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.js 200 in 245ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/usePrefetchQuery.js 200 in 249ms
[INFO] GET /src/components/Logo.tsx 304 in 246ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/usePrefetchInfiniteQuery.js 200 in 248ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 234ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/queryOptions.js 200 in 233ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/infiniteQueryOptions.js 200 in 248ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 250ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js 200 in 252ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 245ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js 200 in 243ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js 200 in 246ms
[INFO] GET /src/components/ui/input.tsx 304 in 248ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useIsFetching.js 200 in 246ms
[INFO] GET /src/components/ui/form.tsx 304 in 247ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useMutationState.js 200 in 237ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useMutation.js 200 in 243ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 229ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js 200 in 243ms
[INFO] GET /src/hooks/use-audio.ts 304 in 244ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/isRestoring.js 200 in 242ms
[INFO] GET /src/hooks/use-toast.ts 304 in 245ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 251ms
[INFO] GET /src/components/ui/toast.tsx 304 in 246ms
[INFO] GET /src/lib/utils.ts 304 in 244ms
[INFO] GET /src/hooks/use-tts.ts 304 in 246ms
[INFO] GET /src/components/Logo.tsx 304 in 248ms
[INFO] GET /src/components/ui/card.tsx 304 in 243ms
[INFO] GET /node_modules/.vite/deps/react-dropzone.js 200 in 249ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 240ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 253ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 248ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 246ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 187ms
[INFO] GET /node_modules/.vite/deps/@hookform_resolvers_zod.js 200 in 137ms
[INFO] GET /node_modules/.vite/deps/react-hook-form.js 200 in 194ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 244ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 245ms
[INFO] GET /src/components/ui/separator.tsx 304 in 244ms
[INFO] GET /src/components/ui/input.tsx 304 in 247ms
[INFO] GET /src/components/ui/form.tsx 304 in 248ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 246ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 247ms
[INFO] GET /src/components/ui/progress.tsx 304 in 225ms
[INFO] GET /src/hooks/use-audio.ts 304 in 250ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 247ms
[INFO] GET /src/lib/utils.ts 304 in 246ms
[INFO] GET /src/components/ui/label.tsx 304 in 235ms
[INFO] GET /src/components/ui/slider.tsx 304 in 245ms
[INFO] GET /src/components/ui/card.tsx 304 in 246ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 228ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 55ms
[INFO] GET / 200 in 50ms
[INFO] GET /@vite/client 304 in 66ms
[INFO] GET /@vite/client 304 in 69ms
[INFO] GET /@react-refresh 304 in 101ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 2ms
[INFO] GET /src/main.tsx 304 in 154ms
[INFO] GET /src/main.tsx 304 in 106ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 35ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 119ms
[INFO] GET /@react-refresh 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 6ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 85ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 5ms
[INFO] GET /src/index.css 304 in 1651ms
[INFO] GET /src/index.css 304 in 844ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 0ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 0ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 0ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 0ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 0ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /node_modules/.vite/deps/react_jsx-runtime.js 200 in 236ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js 200 in 404ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/utils.js 200 in 318ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/useBaseQuery.js 200 in 349ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /node_modules/@tanstack/react-query/build/modern/suspense.js 200 in 358ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/thenable.js 200 in 364ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/subscribable.js 200 in 68ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/removable.js 200 in 7ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js 200 in 6ms
[INFO] GET /src/hooks/use-toast.ts 304 in 2ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/components/ui/avatar.tsx 200 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-AQLDCZXZ.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/chunk-BRRE5DHS.js 200 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 0ms
[INFO] GET /src/components/ui/card.tsx 304 in 0ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 1ms
[INFO] GET /src/components/Logo.tsx 304 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/components/ui/form.tsx 304 in 0ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 0ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 0ms
[INFO] GET /src/components/Logo.tsx 304 in 0ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-L4MDAFY7.js 200 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 200 in 1ms
[INFO] GET /src/components/ui/separator.tsx 200 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 200 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /src/components/ui/scroll-area.tsx 200 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 0ms
[INFO] GET /node_modules/.vite/deps/chunk-GG6DLQSN.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-toast.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-avatar.js 200 in 0ms
[INFO] GET /src/hooks/use-audio.ts 304 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/components/ui/progress.tsx 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-alert-dialog.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-tabs.js 200 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 200 in 1ms
[INFO] GET /src/components/ui/popover.tsx 200 in 0ms
[INFO] GET /src/components/ui/card.tsx 304 in 0ms
[INFO] GET /src/components/ui/select.tsx 200 in 1ms
[INFO] GET /node_modules/.vite/deps/clsx.js 200 in 1ms
[INFO] GET /src/components/ui/label.tsx 200 in 1ms
[INFO] GET /node_modules/.vite/deps/tailwind-merge.js 200 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 0ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-separator.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/drizzle-orm.js 200 in 0ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/drizzle-zod.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/drizzle-orm_pg-core.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-scroll-area.js 200 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 0ms
[INFO] GET /node_modules/.vite/deps/@stripe_stripe-js.js 200 in 0ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 0ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/@stripe_react-stripe-js.js 200 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-progress.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/chunk-FJPGOHNW.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-35B7JXTL.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-6XV4HSYW.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-slider.js 200 in 1ms
[INFO] GET /src/components/ui/label.tsx 200 in 1ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-QZPVBNAY.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-select.js 200 in 2ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-label.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-popover.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-FWMAMDE5.js 200 in 1ms
[INFO] GET /src/components/ui/slider.tsx 200 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-3AB3NPNE.js 200 in 0ms
[INFO] GET /node_modules/.vite/deps/chunk-YM5TUJTQ.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/@radix-ui_react-dialog.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-UQF5EARV.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-2UKO2BZC.js 200 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-ZJQZRWNQ.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-EV6QPYAA.js 200 in 1ms
[INFO] GET /api/user 401 in 4ms
[INFO] GET /api/user 401 in 1ms
[INFO] GET / 200 in 10ms
[INFO] POST /api/login 200 in 403ms
[INFO] GET /api/user 304 in 61ms
[INFO] GET / 200 in 116ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 304 in 366ms
[INFO] GET /api/playlists 304 in 380ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 1331ms
[INFO] GET / 200 in 62ms
[INFO] GET / 200 in 119ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 200 in 178ms
[INFO] GET / 200 in 58ms
[INFO] GET / 200 in 106ms
[INFO] GET /api/podcasts 304 in 166ms
[INFO] GET / 200 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 186ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 115ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] GET / 200 in 65ms
[INFO] GET /@vite/client 304 in 56ms
[INFO] GET /src/main.tsx 304 in 56ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 57ms
[INFO] GET /@react-refresh 304 in 74ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 57ms
[INFO] GET /src/index.css 304 in 65ms
[INFO] GET /src/lib/queryClient.ts 304 in 60ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 57ms
[INFO] GET /src/pages/HomePage.tsx 304 in 57ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 75ms
[INFO] GET / 200 in 76ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 91ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 108ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 57ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 69ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 59ms
[INFO] GET /src/hooks/use-user.ts 304 in 58ms
[INFO] GET /src/components/Sidebar.tsx 304 in 70ms
[INFO] GET /src/components/ui/button.tsx 304 in 68ms
[INFO] GET / 200 in 61ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 111ms
[INFO] GET /src/hooks/use-toast.ts 304 in 102ms
[INFO] GET /src/components/ui/toast.tsx 304 in 74ms
[INFO] GET /src/hooks/use-tts.ts 304 in 74ms
[INFO] GET /src/components/Logo.tsx 304 in 56ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 109ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 62ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 64ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 304 in 240ms
[INFO] GET / 200 in 210ms
[INFO] GET /src/components/ui/input.tsx 304 in 261ms
[INFO] GET /src/components/ui/form.tsx 304 in 221ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 61ms
[INFO] GET /src/hooks/use-audio.ts 304 in 71ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 259ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /src/lib/utils.ts 304 in 295ms
[INFO] GET /src/components/ui/card.tsx 304 in 264ms
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 1123ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 94ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 65ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 56ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 68ms
[INFO] GET /src/components/ui/separator.tsx 304 in 78ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 76ms
[INFO] GET /src/components/ui/progress.tsx 304 in 57ms
[INFO] GET /src/components/ui/label.tsx 304 in 72ms
[INFO] GET /src/components/ui/slider.tsx 304 in 68ms
[INFO] GET /src/components/ui/popover.tsx 304 in 68ms
[INFO] GET /src/components/ui/select.tsx 304 in 71ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 66ms
[INFO] GET /api/user 304 in 57ms
[INFO] GET / 200 in 118ms
[INFO] GET /api/playlists 200 in 227ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 200 in 231ms
[INFO] GET / 200 in 61ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 167ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 139ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 110ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 110ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 110ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 132ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 113ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 127ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 110ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 112ms
[INFO] Usage check for user: active
[INFO] GET /api/user/usage/check 304 in 111ms
[INFO] Successfully verified webhook event: invoice.updated
[INFO] POST /api/webhooks/stripe 200 in 3ms
[INFO] Successfully verified webhook event: invoice.voided
[INFO] POST /api/webhooks/stripe 200 in 1ms
[INFO] Successfully verified webhook event: payment_intent.canceled
[INFO] POST /api/webhooks/stripe 200 in 2ms
[INFO] Successfully verified webhook event: customer.subscription.updated
[INFO] Updated subscription status for user 24: canceled
[INFO] POST /api/webhooks/stripe 200 in 71ms
[INFO] GET / 204 in 56ms
[INFO] GET / 204 in 109ms
[INFO] GET / 200 in 74ms
[INFO] GET / 200 in 66ms
[INFO] GET /@vite/client 304 in 73ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 117ms
[INFO] GET / 200 in 75ms
[INFO] GET /@react-refresh 304 in 117ms
[INFO] GET /src/main.tsx 304 in 177ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 197ms
[INFO] GET /src/index.css 304 in 69ms
[INFO] GET /src/lib/queryClient.ts 304 in 121ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 129ms
[INFO] GET /@vite/client 304 in 149ms
[INFO] GET /src/pages/HomePage.tsx 304 in 172ms
[INFO] GET /src/main.tsx 304 in 232ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 232ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 227ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 193ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 234ms
[INFO] GET /@react-refresh 304 in 231ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 228ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 231ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 225ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 239ms
[INFO] GET /src/index.css 304 in 238ms
[INFO] GET /src/hooks/use-user.ts 304 in 223ms
[INFO] GET /src/components/Sidebar.tsx 304 in 242ms
[INFO] GET /src/lib/queryClient.ts 304 in 239ms
[INFO] GET /src/components/ui/button.tsx 304 in 231ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 228ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 234ms
[INFO] GET /src/hooks/use-toast.ts 304 in 206ms
[INFO] GET /src/pages/HomePage.tsx 304 in 236ms
[INFO] GET /src/components/ui/toast.tsx 304 in 236ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 235ms
[INFO] GET /src/hooks/use-tts.ts 304 in 235ms
[INFO] GET /src/components/Logo.tsx 304 in 239ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 233ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 233ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 232ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 234ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 240ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 243ms
[INFO] GET /src/components/ui/input.tsx 304 in 245ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 243ms
[INFO] GET /src/components/ui/form.tsx 304 in 242ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 240ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 233ms
[INFO] GET /src/hooks/use-audio.ts 304 in 236ms
[INFO] GET /src/hooks/use-user.ts 304 in 223ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 238ms
[INFO] GET /src/lib/utils.ts 304 in 239ms
[INFO] GET /src/components/Sidebar.tsx 304 in 233ms
[INFO] GET /src/components/ui/card.tsx 304 in 235ms
[INFO] GET /src/components/ui/button.tsx 304 in 236ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 221ms
[INFO] GET /node_modules/.vite/deps/date-fns.js 200 in 237ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 237ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 232ms
[INFO] GET /src/hooks/use-toast.ts 304 in 211ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 234ms
[INFO] GET /src/components/ui/toast.tsx 304 in 177ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 171ms
[INFO] GET /src/components/ui/separator.tsx 304 in 211ms
[INFO] GET /src/hooks/use-tts.ts 304 in 229ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 238ms
[INFO] GET /src/components/Logo.tsx 304 in 243ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/retryer.js 200 in 242ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/queryCache.js 200 in 242ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 240ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/queryClient.js 200 in 231ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 230ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/queryObserver.js 200 in 197ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/queriesObserver.js 200 in 236ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 229ms
[INFO] GET /src/components/ui/input.tsx 304 in 180ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js 200 in 214ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/mutationCache.js 200 in 177ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/mutationObserver.js 200 in 225ms
[INFO] GET /src/components/ui/form.tsx 304 in 231ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 226ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/notifyManager.js 200 in 230ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/focusManager.js 200 in 230ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/onlineManager.js 200 in 235ms
[INFO] GET /src/hooks/use-audio.ts 304 in 234ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 234ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/utils.js 200 in 233ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/hydration.js 200 in 237ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/types.js 200 in 233ms
[INFO] GET /src/lib/utils.ts 304 in 231ms
[INFO] GET /src/components/ui/card.tsx 304 in 235ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/query.js 200 in 187ms
[INFO] GET /node_modules/@tanstack/query-core/build/modern/mutation.js 200 in 229ms
[INFO] GET /src/components/ui/progress.tsx 304 in 217ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 221ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 230ms
[INFO] GET /src/components/ui/label.tsx 304 in 182ms
[INFO] GET /src/components/ui/slider.tsx 304 in 189ms
[INFO] GET /src/components/ui/popover.tsx 304 in 251ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 248ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 249ms
[INFO] GET /src/components/ui/select.tsx 304 in 245ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 235ms
[INFO] GET /src/components/ui/separator.tsx 304 in 178ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 177ms
[INFO] GET /api/user 200 in 65ms
[INFO] GET /src/components/ui/progress.tsx 304 in 97ms
[INFO] GET /src/components/ui/label.tsx 304 in 109ms
[INFO] GET / 200 in 163ms
[INFO] GET /src/components/ui/slider.tsx 304 in 239ms
[INFO] GET /src/components/ui/popover.tsx 304 in 240ms
[INFO] GET /api/playlists 304 in 392ms
[INFO] GET / 200 in 303ms
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 200 in 501ms
[INFO] GET /src/components/ui/select.tsx 304 in 205ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 42ms
[INFO] GET /@vite/client 304 in 37ms
[INFO] GET /@react-refresh 304 in 51ms
[INFO] GET /src/main.tsx 304 in 78ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 200 in 276ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/lucide-react.js 200 in 16ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 1ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 1ms
[INFO] GET /src/index.css 304 in 747ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-WE2PF65S.js 200 in 4ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 0ms
[INFO] GET /src/components/ui/form.tsx 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/components/ui/input.tsx 304 in 0ms
[INFO] GET /src/hooks/use-toast.ts 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 0ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 304 in 0ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 0ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/recharts.js 200 in 6ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/date-fns.js 200 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 0ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 1ms
[INFO] GET /node_modules/.vite/deps/chunk-3AB3NPNE.js 200 in 1ms
[INFO] GET /node_modules/.vite/deps/drizzle-zod.js 200 in 1ms
[INFO] GET /src/components/ui/label.tsx 304 in 0ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 0ms
[INFO] GET /src/components/ui/popover.tsx 200 in 1ms
[INFO] GET /src/components/ui/select.tsx 200 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /api/user 401 in 2ms
[INFO] GET / 200 in 8ms
[INFO] GET /@vite/client 200 in 15ms
[INFO] GET /@vite-plugin-checker-runtime 200 in 8ms
[INFO] GET /src/main.tsx 304 in 1ms
[INFO] GET /@react-refresh 304 in 0ms
[INFO] GET /src/index.css 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 0ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 0ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 1ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 0ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 0ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 0ms
[INFO] GET /src/components/ui/button.tsx 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /src/hooks/use-tts.ts 304 in 0ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 304 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/components/ui/form.tsx 304 in 0ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 0ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 0ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 0ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 0ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 0ms
[INFO] GET /src/components/ui/label.tsx 304 in 0ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 0ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 0ms
[INFO] GET /api/user 401 in 1ms
[INFO] GET / 200 in 4ms
[INFO] GET / 200 in 2ms
[INFO] POST /api/login 200 in 399ms
[INFO] GET /api/user 304 in 58ms
[INFO] GET / 200 in 93ms
[INFO] GET / 200 in 57ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/playlists 200 in 334ms
[INFO] GET /api/podcasts 304 in 363ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 955ms
[INFO] GET / 200 in 61ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 107ms
[INFO] GET /src/index.css 200 in 222ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 251ms
[INFO] GET /src/index.css 200 in 306ms
[INFO] GET / 200 in 63ms
[INFO] GET /src/main.tsx 200 in 58ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 104ms
[INFO] GET /@react-refresh 304 in 158ms
[INFO] GET /@vite/client 304 in 212ms
[INFO] GET /src/index.css 304 in 132ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 184ms
[INFO] GET /src/lib/queryClient.ts 304 in 182ms
[INFO] GET /src/pages/HomePage.tsx 304 in 181ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 223ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 233ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 270ms
[INFO] GET /src/hooks/use-user.ts 304 in 291ms
[INFO] GET /src/components/Sidebar.tsx 304 in 290ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 290ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 290ms
[INFO] GET /src/components/ui/button.tsx 304 in 288ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 290ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 290ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 292ms
[INFO] GET /src/components/ui/toast.tsx 304 in 287ms
[INFO] GET /src/hooks/use-toast.ts 304 in 288ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 287ms
[INFO] GET /src/components/Logo.tsx 304 in 244ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 288ms
[INFO] GET /src/hooks/use-tts.ts 304 in 290ms
[INFO] GET /src/components/ui/form.tsx 304 in 289ms
[INFO] GET /src/components/ui/input.tsx 304 in 289ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 287ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 284ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 290ms
[INFO] GET /src/lib/utils.ts 304 in 288ms
[INFO] GET /src/hooks/use-audio.ts 304 in 290ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 291ms
[INFO] GET /src/components/ui/card.tsx 304 in 288ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 286ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 285ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 287ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 286ms
[INFO] GET /src/components/ui/separator.tsx 304 in 287ms
[INFO] GET /src/components/ui/progress.tsx 304 in 285ms
[INFO] GET /src/components/ui/label.tsx 304 in 300ms
[INFO] GET /src/components/ui/popover.tsx 304 in 304ms
[INFO] GET /src/components/ui/slider.tsx 304 in 302ms
[INFO] GET /src/components/ui/select.tsx 304 in 300ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 305ms
[INFO] GET /api/user 304 in 57ms
[INFO] GET / 200 in 59ms
[INFO] GET / 200 in 82ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 304 in 298ms
[INFO] GET /api/playlists 304 in 352ms
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 831ms
[INFO] GET / 200 in 58ms
[INFO] GET / 204 in 56ms
[INFO] GET / 204 in 108ms
[INFO] GET / 200 in 68ms
[INFO] GET / 200 in 67ms
[INFO] GET /@vite/client 304 in 59ms
[INFO] GET /src/main.tsx 304 in 57ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 86ms
[INFO] GET /@react-refresh 304 in 133ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 184ms
[INFO] GET / 200 in 222ms
[INFO] GET /src/index.css 304 in 231ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 249ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 290ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 288ms
[INFO] GET /src/lib/queryClient.ts 304 in 317ms
[INFO] GET /src/pages/HomePage.tsx 304 in 340ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 289ms
[INFO] GET /@vite/client 304 in 341ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 341ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 344ms
[INFO] GET /src/hooks/use-user.ts 304 in 341ms
[INFO] GET /src/main.tsx 200 in 372ms
[INFO] GET /src/components/Sidebar.tsx 304 in 398ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 398ms
[INFO] GET /src/components/ui/button.tsx 304 in 402ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 395ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 398ms
[INFO] GET /src/components/ui/toast.tsx 304 in 398ms
[INFO] GET /src/hooks/use-toast.ts 304 in 397ms
[INFO] GET /@react-refresh 304 in 395ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 397ms
[INFO] GET /src/components/ui/form.tsx 304 in 396ms
[INFO] GET /src/components/ui/input.tsx 304 in 394ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 392ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 394ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 398ms
[INFO] GET /src/hooks/use-audio.ts 304 in 393ms
[INFO] GET /src/index.css 304 in 395ms
[INFO] GET /src/lib/utils.ts 304 in 396ms
[INFO] GET /src/components/Logo.tsx 304 in 396ms
[INFO] GET /src/hooks/use-tts.ts 304 in 394ms
[INFO] GET /src/lib/queryClient.ts 304 in 380ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 394ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 398ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 392ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 395ms
[INFO] GET /src/components/ui/card.tsx 304 in 393ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 396ms
[INFO] GET /src/components/ui/separator.tsx 304 in 390ms
[INFO] GET /src/pages/HomePage.tsx 304 in 392ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 394ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 398ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 396ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 391ms
[INFO] GET /src/components/ui/label.tsx 304 in 393ms
[INFO] GET /src/components/ui/popover.tsx 304 in 397ms
[INFO] GET /src/components/ui/select.tsx 304 in 395ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 393ms
[INFO] GET /src/components/ui/slider.tsx 304 in 396ms
[INFO] GET /src/components/ui/progress.tsx 304 in 394ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 397ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 395ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 228ms
[INFO] GET /api/user 304 in 92ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 123ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 120ms
[INFO] GET / 200 in 158ms
[INFO] GET / 200 in 222ms
[INFO] GET /src/hooks/use-user.ts 304 in 287ms
[INFO] GET /src/components/Sidebar.tsx 304 in 289ms
[INFO] GET /api/podcasts 304 in 439ms
[INFO] GET /api/playlists 304 in 492ms
[INFO] GET /src/components/ui/button.tsx 304 in 173ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 171ms
[INFO] GET /src/hooks/use-toast.ts 304 in 58ms
[INFO] GET /src/components/ui/toast.tsx 304 in 63ms
[INFO] GET /src/hooks/use-tts.ts 304 in 66ms
[INFO] GET /src/components/Logo.tsx 304 in 64ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 66ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 64ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 69ms
[INFO] GET /src/components/ui/input.tsx 304 in 70ms
[INFO] GET /src/components/ui/form.tsx 304 in 66ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 63ms
[INFO] GET /src/hooks/use-audio.ts 304 in 66ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 64ms
[INFO] GET /src/lib/utils.ts 304 in 68ms
[INFO] GET /src/components/ui/card.tsx 304 in 66ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 62ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 64ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 68ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 65ms
[INFO] GET /src/components/ui/separator.tsx 304 in 64ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 67ms
[INFO] GET /src/components/ui/progress.tsx 304 in 65ms
[INFO] GET /src/components/ui/label.tsx 304 in 67ms
[INFO] GET /src/components/ui/slider.tsx 304 in 66ms
[INFO] GET /src/components/ui/popover.tsx 304 in 58ms
[INFO] GET /src/components/ui/select.tsx 304 in 76ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 66ms
[INFO] GET /api/user 200 in 56ms
[INFO] GET / 200 in 112ms
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 200 in 251ms
[INFO] GET /api/playlists 304 in 289ms
[INFO] GET / 204 in 57ms
[INFO] GET / 200 in 57ms
[INFO] GET / 204 in 55ms
[INFO] GET /@vite/client 304 in 56ms
[INFO] GET / 200 in 68ms
[INFO] GET /@react-refresh 304 in 104ms
[INFO] GET /src/main.tsx 304 in 155ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 208ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 142ms
[INFO] GET /src/index.css 304 in 121ms
[INFO] GET /src/lib/queryClient.ts 304 in 172ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 218ms
[INFO] GET /src/pages/HomePage.tsx 304 in 272ms
[INFO] GET /@vite/client 304 in 311ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 344ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 337ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 341ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 304ms
[INFO] GET /src/main.tsx 304 in 358ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 397ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 395ms
[INFO] GET /src/hooks/use-user.ts 304 in 307ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 359ms
[INFO] GET /src/components/Sidebar.tsx 304 in 397ms
[INFO] GET /src/components/ui/button.tsx 304 in 397ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 397ms
[INFO] GET /@react-refresh 304 in 395ms
[INFO] GET /src/hooks/use-toast.ts 304 in 330ms
[INFO] GET /src/components/ui/toast.tsx 304 in 385ms
[INFO] GET /src/hooks/use-tts.ts 304 in 396ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 400ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 358ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 401ms
[INFO] GET /src/components/Logo.tsx 304 in 404ms
[INFO] GET /src/index.css 304 in 404ms
[INFO] GET /src/components/ui/input.tsx 304 in 403ms
[INFO] GET /src/components/ui/form.tsx 304 in 401ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 356ms
[INFO] GET /src/lib/queryClient.ts 304 in 400ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 400ms
[INFO] GET /src/hooks/use-audio.ts 304 in 401ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 388ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 397ms
[INFO] GET /src/lib/utils.ts 304 in 405ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 231ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 285ms
[INFO] GET /src/components/ui/card.tsx 304 in 340ms
[INFO] GET /src/pages/HomePage.tsx 304 in 391ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 391ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 406ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 391ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 434ms
[INFO] GET /src/components/ui/separator.tsx 304 in 455ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 448ms
[INFO] GET /src/components/ui/progress.tsx 304 in 631ms
[INFO] GET /src/components/ui/select.tsx 304 in 487ms
[INFO] GET /src/components/ui/label.tsx 304 in 592ms
[INFO] GET /src/components/ui/slider.tsx 304 in 640ms
[INFO] Stripe initialized successfully
[INFO] ***Starting server initialization...


[INFO] Registering routes...
[INFO] Setting up Vite for development...
[INFO] Server started successfully on port 4000
[INFO] Webhook endpoint available at: https://PodCasterella.VivekGopal1.repl.co/api/webhooks/stripe
[INFO] GET / 200 in 50ms
[INFO] GET /@vite/client 304 in 51ms
[INFO] GET /src/main.tsx 304 in 75ms
[INFO] GET /@react-refresh 304 in 43ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 84ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 200 in 33ms
[INFO] GET /src/pages/PricingPage.tsx 200 in 1ms
[INFO] GET /src/hooks/use-user.ts 200 in 2ms
[INFO] GET /src/pages/ProfilePage.tsx 200 in 1ms
[INFO] GET /src/components/ui/button.tsx 200 in 1ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 200 in 1ms
[INFO] GET /src/pages/BillingPage.tsx 200 in 1ms
[INFO] GET /src/components/Sidebar.tsx 200 in 1ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/index.css 304 in 595ms
[INFO] GET /src/pages/HomePage.tsx 304 in 0ms
[INFO] GET /src/components/ui/card.tsx 304 in 0ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 0ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 1ms
[INFO] GET /src/lib/utils.ts 200 in 1ms
[INFO] GET /src/components/ui/input.tsx 200 in 1ms
[INFO] GET /src/hooks/use-toast.ts 200 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/Logo.tsx 200 in 1ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 200 in 1ms
[INFO] GET /src/hooks/use-tts.ts 200 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 200 in 1ms
[INFO] GET /src/components/ui/collapsible.tsx 200 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 200 in 1ms
[INFO] GET /src/components/ui/form.tsx 200 in 1ms
[INFO] GET /src/hooks/use-audio.ts 200 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 200 in 1ms
[INFO] GET /src/components/AudioPlayer.tsx 200 in 1ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 0ms
[INFO] GET /src/components/ui/progress.tsx 304 in 0ms
[INFO] GET /src/components/ui/label.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 0ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /api/user 401 in 3ms
[INFO] GET / 200 in 7ms
[INFO] GET /@vite/client 304 in 1ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 1ms
[INFO] GET /@react-refresh 304 in 1ms
[INFO] GET /src/main.tsx 304 in 1ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 0ms
[INFO] GET /src/lib/queryClient.ts 304 in 1ms
[INFO] GET /src/index.css 304 in 1ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 1ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 1ms
[INFO] GET /src/pages/HomePage.tsx 304 in 1ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 0ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 1ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 0ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 0ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-user.ts 304 in 1ms
[INFO] GET /src/components/Sidebar.tsx 304 in 1ms
[INFO] GET /src/components/ui/button.tsx 304 in 0ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 1ms
[INFO] GET /src/hooks/use-toast.ts 304 in 0ms
[INFO] GET /src/components/ui/toast.tsx 304 in 0ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 1ms
[INFO] GET /src/components/ui/input.tsx 304 in 1ms
[INFO] GET /src/components/ui/form.tsx 304 in 1ms
[INFO] GET /src/hooks/use-tts.ts 304 in 0ms
[INFO] GET /src/components/Logo.tsx 304 in 1ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 0ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 1ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 1ms
[INFO] GET /src/hooks/use-audio.ts 304 in 0ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 1ms
[INFO] GET /src/lib/utils.ts 304 in 1ms
[INFO] GET /src/components/ui/card.tsx 304 in 1ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 1ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 1ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 1ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 0ms
[INFO] GET /src/components/ui/separator.tsx 304 in 0ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 0ms
[INFO] GET /src/components/ui/label.tsx 304 in 1ms
[INFO] GET /src/components/ui/progress.tsx 304 in 1ms
[INFO] GET /src/components/ui/slider.tsx 304 in 1ms
[INFO] GET /src/components/ui/popover.tsx 304 in 1ms
[INFO] GET /src/components/ui/select.tsx 304 in 0ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 1ms
[INFO] GET /api/user 401 in 1ms
[INFO] GET / 200 in 3ms
[INFO] POST /api/login 200 in 407ms
[INFO] GET /api/user 304 in 59ms
[INFO] GET / 200 in 111ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 304 in 276ms
[INFO] GET /api/playlists 304 in 414ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 1176ms
[INFO] GET / 200 in 57ms
[INFO] GET /src/index.css 200 in 216ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 351ms
[INFO] GET /src/index.css 200 in 351ms
[INFO] GET /src/pages/LibraryPage.tsx 200 in 407ms
[INFO] GET /api/podcasts 304 in 124ms
[INFO] GET / 200 in 63ms
[INFO] GET /@vite/client 304 in 59ms
[INFO] GET /src/main.tsx 200 in 114ms
[INFO] GET /@react-refresh 304 in 163ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 220ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 161ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 113ms
[INFO] GET /src/index.css 304 in 170ms
[INFO] GET /src/lib/queryClient.ts 304 in 206ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 260ms
[INFO] GET /src/pages/HomePage.tsx 304 in 298ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 301ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 302ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 297ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 298ms
[INFO] GET /src/hooks/use-user.ts 304 in 300ms
[INFO] GET /src/components/Sidebar.tsx 304 in 293ms
[INFO] GET /src/components/ui/button.tsx 304 in 297ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 297ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 298ms
[INFO] GET /src/components/ui/toast.tsx 304 in 299ms
[INFO] GET /src/hooks/use-toast.ts 304 in 297ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 298ms
[INFO] GET /src/lib/utils.ts 304 in 298ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 298ms
[INFO] GET /src/hooks/use-audio.ts 304 in 295ms
[INFO] GET /src/hooks/use-tts.ts 304 in 295ms
[INFO] GET /src/components/Logo.tsx 304 in 298ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 299ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 301ms
[INFO] GET /src/components/ui/input.tsx 304 in 301ms
[INFO] GET /src/components/ui/form.tsx 304 in 300ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 297ms
[INFO] GET /src/components/ui/card.tsx 304 in 299ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 300ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 301ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 299ms
[INFO] GET /src/components/ui/separator.tsx 304 in 299ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 296ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 302ms
[INFO] GET /src/components/ui/slider.tsx 304 in 298ms
[INFO] GET /src/components/ui/popover.tsx 304 in 299ms
[INFO] GET /src/components/ui/select.tsx 304 in 297ms
[INFO] GET /src/components/ui/progress.tsx 304 in 296ms
[INFO] GET /src/components/ui/label.tsx 304 in 297ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 299ms
[INFO] GET /api/user 304 in 58ms
[INFO] GET / 200 in 60ms
[INFO] GET / 200 in 141ms
[INFO] GET /api/podcasts 304 in 260ms
[INFO] GET /api/playlists 304 in 281ms
[INFO] GET / 200 in 118ms
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 200 in 180ms
[INFO] Calculating estimated pricing and checking usage limits
[INFO] 
======= Starting Pricing Calculation ======
 -Input text length: 16704
 -Number of Vertex AI responses: 0

[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 180ms
[INFO] 
        Input text length: 16704
        Input token count: 3419
        System prompt length: 2718
        System token count: 525
        Total input tokens: 3944
      
[INFO] 
---***** Estimated Calculation Summary **** ---
Total Input Tokens: 3944
Total Output Tokens: 5916
Total Tokens: 9860
Total TTS Characters: 23664
Vertex AI Input Cost: $0.000002
Vertex AI Output Cost: $0.000003
TTS Cost: $0.378624
Total Cost: $0.378629
[INFO] Estimated Podify Tokens: 190 

Usage limits check for user 24:
 Current articles: 1/3
 Current Podify tokens: 138/10000
 Would exceed article limit: false
 Would exceed token limit: false
[INFO] Starting audio generation process
[INFO] 
--- Starting Conversation Generation ---

[INFO] 

 ------------PROMPT to VERTEX AI-----------------
 Speaker Joe should Start the podcast by saying this: Welcome to Science Odyssey, the podcast where we journey through groundbreaking scientific studies,
unraveling the mysteries behind the research that shapes our world. Thanks for tuning in!

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "um," "ah," "you know," and short pauses.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

You are generating a podcast conversation between Joe and Sarah.

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "you know," and short pauses.
4. Don't include any sound effects or background music.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

Joe: C arl Laflamme knew what protein he wanted to study, but not where to find it. It is encoded by a gene called C9ORF72, which is mutated in some people with the devastating neuro- logical condition motor neuron disease, also known as amyotrophic lateral sclerosis. And Laflamme wanted to understand its role in the disease. When he started his postdoctoral fellowship at the Montreal Neurological Institute-Hospital in Canada, Laflamme scoured the literature, searching for information on the protein. The problem was that none of the papers seemed to agree where in the cell this mysterious mol- ecule operates. There was so much confusion in the field, Laflamme says. He wondered whether a reagent was to blame, in particular the antibodies that scientists used to measure the amount of the protein and track its position in the cell. So, he and his colleagues decided to test the antibodies that were available. They identified 16 commercial antibodies that were adver- tised as able to bind to the protein encoded by C9ORF72. When the researchers put them THE QUEST TO RID LABS OF THE REAGENTS THAT RUIN EXPERIMENTS Poorly performing antibodies have plagued biomedicalsciences for decades. Several fresh initiativeshope to change this. By Diana Kwon ILLUSTRATION BY FABIO BUONOCORE 26 | Nature | Vol 635 | 7 November 2024 Feature through their paces, only three performed wellmeaning that the antibodies bound to the protein of interest without binding to other molecules. But not one published study had used these antibodies. About 15 papers described experiments using an antibody that didnt even bind the key protein in Laflammes testing. And those papers had been collec- tively cited more than 3,000 times 1 . Laflammes experience isnt unusual. Scien- tists have long known that many commercial antibodies dont work as they should they often fail to recognize a specific protein or non-selectively bind to several other targets. The result is a waste of time and resources that some say has contributed to a repro - ducibility crisis in the biological sciences, potentially slowing the pace of discovery and drug development. Laflamme is part of a growing community that wants to solve the problem of unreliable antibodies in research. He teamed up with molecular geneticist Aled Edwards at the University of Toronto, Canada, to set up Antibody Characterization through Open Science (YCharOS, pronounced Icarus), an initiative that aims to characterize commer- cially available research antibodies for every human protein. There are also efforts under way to produce better-performing antibodies, to make it easier for researchers to find them and to encourage the research community to adopt best prac- tices when it comes to choosing and working with these molecules. Antibody vendors, funding agencies and scientific publishers are all getting in on the action, says Harvinder Virk, a physicianscientist at the University of Leicester, UK. Its hard to imagine that a problem that has been going on so long will suddenly change but Im hopeful. Putting antibodies to the test The immune system produces antibodies in response to foreign substances, such as viruses and bacteria, flagging them for destruction. This makes antibodies useful in laboratory experiments. Scientists co-opt this ability by using them to mark or quantify spe- cific biological molecules, such as a segment of a protein. To be effective, these molecular tags need to have both specificity a strong affinity for the target and selectivity the ability to leave other proteins unmarked. For decades, scientists created these anti- bodies themselves. They injected proteins into animals, such as rabbits, whose immune systems would generate antibodies against the foreign molecules. To create a longer- term, more consistent supply of antibodies, researchers extracted immune cells from ani- mals and combined them with immortalized cancer cells.

Sarah: 

 ------------END-----------------

[INFO] 

 -------RESPONSE FROM VERTEX AI---------
 Joe: Welcome to Science Odyssey, the podcast where we journey through groundbreaking scientific studies, unraveling the mysteries behind the research that shapes our world. Thanks for tuning in!  So, Sarah, today we're diving into a fascinating story about antibodies – or rather, the *problem* of antibodies in scientific research.  It's a surprisingly big deal.

Sarah:  A big deal? Antibodies? I mean, I know they're used in lots of research, but what's the problem?  I always assumed they were, you know, pretty reliable tools.

Joe:  That's exactly what a lot of people assumed, um, for a long time.  The problem is, many commercially available antibodies – the ones scientists buy and use in their labs – just don't work as advertised.  They might not bind to the specific protein they're supposed to, or they might bind to other proteins too, giving you completely misleading results.

Sarah:  So, false positives, essentially?  That sounds…messy.  And costly, I imagine.

Joe:  Exactly! Messy and incredibly costly.  Think about it: researchers spend time, money, and effort designing experiments, only to find out their results are unreliable because of a faulty antibody.  This has, ah, contributed to what some call a reproducibility crisis in biology.  Thousands of papers, potentially, are based on unreliable data.

Sarah:  Wow.  So, can you tell me more about this?  How did this even happen?  Was it just poor quality control, or something more systemic?

Joe:  It's a bit of both, I think.  For decades, scientists often made their own antibodies.  But then commercial production took over, and, um, the quality control wasn't always great. Plus, there wasn't really a standardized way to test the antibodies before they hit the market.  One researcher, Carl Laflamme,  highlighted this perfectly. He was studying a protein linked to motor neuron disease, and he found that out of sixteen commercially available antibodies supposedly targeting this protein, only three actually worked properly.

Sarah:  Only three out of sixteen? That's... shockingly low.  So what's being done to fix this?

Joe:  There are several initiatives springing up.  One, called iCharOS, aims to comprehensively characterize every human protein antibody.  They're systematically testing them to see which ones are truly reliable.  There's also a push for better production methods, improved testing standards, and, you know, just better practices among researchers when selecting and using these antibodies.  It's a multi-pronged approach involving vendors, funding agencies, and publishers.

Sarah:  It sounds like a huge undertaking.  But it's definitely necessary, right? I mean, the implications of unreliable research are far-reaching.

Joe: Exactly.  It's about ensuring the integrity of scientific research, which is crucial for advancements in medicine and other fields.  It’s a long road, but there's definitely hope that things are starting to change.

Sarah:  It's a fascinating story, and a sobering one. Thanks for shedding light on this, Joe.  I bet a lot of our listeners will find this as eye-opening as I did.

Joe: My pleasure, Sarah.  And that's all the time we have for today’s episode of Science Odyssey.  Join us next time for another journey into the world of scientific discovery!
 

 ------------END-----------------

[INFO] Processing 13 lines of text
[INFO] Added conversation part: Joe with Welcome to Science Odyssey, the podcast where we j...
[INFO] Added conversation part: Sarah with A big deal? Antibodies? I mean, I know they're use...
[INFO] Added conversation part: Joe with That's exactly what a lot of people assumed, um, f...
[INFO] Added conversation part: Sarah with So, false positives, essentially?  That sounds…mes...
[INFO] Added conversation part: Joe with Exactly! Messy and incredibly costly.  Think about...
[INFO] Added conversation part: Sarah with Wow.  So, can you tell me more about this?  How di...
[INFO] Added conversation part: Joe with It's a bit of both, I think.  For decades, scienti...
[INFO] Added conversation part: Sarah with Only three out of sixteen? That's... shockingly lo...
[INFO] Added conversation part: Joe with There are several initiatives springing up.  One, ...
[INFO] Added conversation part: Sarah with It sounds like a huge undertaking.  But it's defin...
[INFO] Added conversation part: Joe with Exactly.  It's about ensuring the integrity of sci...
[INFO] Added conversation part: Sarah with It's a fascinating story, and a sobering one. Than...
[INFO] Added conversation part: Joe with My pleasure, Sarah.  And that's all the time we ha...
[INFO] Successfully extracted 13 conversation parts
[INFO] Cleaned Text (Chunk 1): [
  {
    "speaker": "Joe",
    "text": "Welcome to Science Odyssey, the podcast where we journey through groundbreaking scientific studies, unraveling the mysteries behind the research that shapes our world. Thanks for tuning in!  So, Sarah, today we're diving into a fascinating story about antibodies – or rather, the *problem* of antibodies in scientific research.  It's a surprisingly big deal."
  },
  {
    "speaker": "Sarah",
    "text": "A big deal? Antibodies? I mean, I know they're used in lots of research, but what's the problem?  I always assumed they were, you know, pretty reliable tools."
  },
  {
    "speaker": "Joe",
    "text": "That's exactly what a lot of people assumed, um, for a long time.  The problem is, many commercially available antibodies – the ones scientists buy and use in their labs – just don't work as advertised.  They might not bind to the specific protein they're supposed to, or they might bind to other proteins too, giving you completely misleading results."
  },
  {
    "speaker": "Sarah",
    "text": "So, false positives, essentially?  That sounds…messy.  And costly, I imagine."
  },
  {
    "speaker": "Joe",
    "text": "Exactly! Messy and incredibly costly.  Think about it: researchers spend time, money, and effort designing experiments, only to find out their results are unreliable because of a faulty antibody.  This has, ah, contributed to what some call a reproducibility crisis in biology.  Thousands of papers, potentially, are based on unreliable data."
  },
  {
    "speaker": "Sarah",
    "text": "Wow.  So, can you tell me more about this?  How did this even happen?  Was it just poor quality control, or something more systemic?"
  },
  {
    "speaker": "Joe",
    "text": "It's a bit of both, I think.  For decades, scientists often made their own antibodies.  But then commercial production took over, and, um, the quality control wasn't always great. Plus, there wasn't really a standardized way to test the antibodies before they hit the market.  One researcher, Carl Laflamme,  highlighted this perfectly. He was studying a protein linked to motor neuron disease, and he found that out of sixteen commercially available antibodies supposedly targeting this protein, only three actually worked properly."
  },
  {
    "speaker": "Sarah",
    "text": "Only three out of sixteen? That's... shockingly low.  So what's being done to fix this?"
  },
  {
    "speaker": "Joe",
    "text": "There are several initiatives springing up.  One, called iCharOS, aims to comprehensively characterize every human protein antibody.  They're systematically testing them to see which ones are truly reliable.  There's also a push for better production methods, improved testing standards, and, you know, just better practices among researchers when selecting and using these antibodies.  It's a multi-pronged approach involving vendors, funding agencies, and publishers."
  },
  {
    "speaker": "Sarah",
    "text": "It sounds like a huge undertaking.  But it's definitely necessary, right? I mean, the implications of unreliable research are far-reaching."
  },
  {
    "speaker": "Joe",
    "text": "Exactly.  It's about ensuring the integrity of scientific research, which is crucial for advancements in medicine and other fields.  It’s a long road, but there's definitely hope that things are starting to change."
  },
  {
    "speaker": "Sarah",
    "text": "It's a fascinating story, and a sobering one. Thanks for shedding light on this, Joe.  I bet a lot of our listeners will find this as eye-opening as I did."
  },
  {
    "speaker": "Joe",
    "text": "My pleasure, Sarah.  And that's all the time we have for today’s episode of Science Odyssey.  Join us next time for another journey into the world of scientific discovery!"
  }
]
[INFO] 

 ------------PROMPT to VERTEX AI-----------------
 You are generating a podcast conversation between Joe and Sarah.

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "you know," and short pauses.
4. Don't include any sound effects or background music.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

**Previous Context**:
My pleasure, Sarah.  And that's all the time we have for today’s episode of Science Odyssey.  Join us next time for another journey into the world of scientific discovery!

Sarah: When reagent companies began the mass production of antibodies in the 1990s, most researchers shifted to purchasing antibodies from a catalogue. Today, there are around 7.7 million research antibody products on the market, sold by almost 350antibody suppliers around the world. In the late 2000s, scientists began reporting problems with both the specificity and selectivity of many commercially available antibodies, leading researchers to call for an independent body to certify that the molecules work as advertised. Over the years, a handful of groups have launched efforts to evaluate antibodies. What sets YCharOS apart is the level of cooperation that it has obtained from com- panies that sell antibodies. When Laflamme and Edwards set out to start YCharOS, they called every single vendor they could find; more than a dozen were interested in collab- orating. YCharOSs industry partners provide the antibodies for testing, free of charge. The partners, along with the funders of the initia- tive (which include various non-profit organ- izations and funding agencies), are given the chance to review characterization reports and provide feedback before they are published. YCharOS tests antibodies by comparing their specificity in a cell line that expresses the target protein at normal biological levels against their performance in whats called a knock-out cell line that lacks the protein (see Ways to validate). In an analysis published in eLife last year, the YCharOS team used this method to assess 614commercial antibodies, targeting a total of 65neuroscience-related proteins 2 . Two- thirds of them did not work as recommended by manufacturers. It never fails to amaze me how much of a hit or miss antibodies are, says Riham Ayoubi, director of operations at YCharOS. It shows you how important it is to include that nega- tive control in the work. Antibody manufacturers reassessed more than half of the underperforming antibodies that YCharOS flagged in 2023. They issued updated recommendations for 153 of them and removed 73 from the market. The YCharOS team has now tested more than 1,000 anti- bodies that are meant to bind to more than 100human proteins. Theres still a lot of work ahead, Laflamme says. He estimates that, of the 1.6 million commercially available antibodies to human proteins, roughly 200,000 are unique (many suppliers sell the same antibodies under different names). I think the YCharOS initiative can really make a difference, says Cecilia Williams, a cancer researcher at the KTH Royal Institute of Technology in Stockholm. But its not everything, because researchers will use these antibodies in other protocols, and in other tissues and cells that may express the protein differently, she says. The context in which anti- bodies are used can change how they perform. Other characterization efforts are trying to tackle this challenge. Andrea Radtke and her collaborators were part of a cell-mapping con- sortium called the Human BioMolecular Atlas Program when they set up the Organ Mapping Antibody Panels (OMAPs). OMAPs are col- lections of community-validated antibodies used in multiplex imaging a technique that involves visualizing several proteins in a single specimen. Unlike YCharOS, which focuses on conducting rigorous characterizations of antibodies for various applications in one specific context, OMAPs is looking at a single application for the antibodies, but in several contexts, such as in different human tissues and imaging methods. To do so, OMAPs recruits scientists from both academia and industry to conduct validations in their own labs. Vendors cannot test all possible applica- tions of their antibodies, but as a community we can say lets try this, says Radtke, who now works as a principal scientist at the instru- mentation company Leica Microsystems in Bethesda, Maryland. People are testing things that you would never think you could test. 

 ------------END-----------------

[INFO] 

 -------RESPONSE FROM VERTEX AI---------
 **(Sound of a gentle transition, then silence)**

**Joe:** So, Sarah, that was quite a story about antibody validation.  It really highlights the… uh… the sheer scale of the problem, right? Millions of antibodies on the market, and a significant portion apparently don't perform as advertised.

**Sarah:**  Exactly!  It's mind-boggling.  Seven point seven *million* antibodies. And the article really emphasized the importance of these negative controls.  Can you explain that a little more?  Why are they so crucial?

**Joe:**  Sure.  A negative control, in this context, is essentially a sample that *shouldn't* show a positive result.  In the case of antibody validation, they use a cell line that lacks the target protein.  If the antibody still binds to this "knock-out" cell line, it suggests a lack of specificity. The antibody is binding to something *other* than the intended target.  It's reacting with something else in the cell, giving you a false positive.  That’s a big problem.

**Sarah:**  So, it's like… a control group to make sure the antibody is only binding to the intended protein and not just anything?  Is that a fair simplification?

**Joe:**  Yeah, that's a reasonable simplification.  It's about isolating the signal from the noise, you know?  Without that negative control, you can't be confident that your positive results are actually due to the interaction with the target protein. You could be seeing a lot of non-specific binding.


**Sarah:**  I see.  And YCharOS's approach, with the collaboration between vendors and researchers, seems pretty revolutionary.  But what about the limitations?  The article mentioned that context matters— different tissues, different protocols. How does that affect the validity of the YCharOS findings?

**Joe:** That's a really good point.  YCharOS focuses on a specific set of conditions, a standardized testing protocol.  While that provides a baseline, it doesn't necessarily guarantee performance across all possible experimental setups.  An antibody might work perfectly in their standardized test but fail in a different cell type or using a different technique.  That's inherent in the complexity of biological systems.  There's a lot of variability.


**Sarah:**  So, essentially, while YCharOS provides a valuable quality control measure, it's not a complete solution?  Researchers still need to be cautious and validate the antibody in their specific experimental context?

**Joe:**  Precisely.  Think of it as a first filter.  It weeds out a lot of the clearly problematic antibodies,  but it doesn't guarantee perfect performance in every situation.  Further validation within the specific research context is still essential.  It's a step in the right direction, but not the final answer.

**Sarah:** It’s fascinating how much complexity there is. It highlights the need for constant vigilance and careful experimental design.  Thanks for explaining that, Joe.  This has been very enlightening.

**Joe:** My pleasure, Sarah.  It's a complex field, but hopefully, we've shed some light on it.

**(Sound of a gentle transition, then silence)**
 

 ------------END-----------------

[INFO] Processing 13 lines of text
[INFO] No speaker pattern match found at line 1: "**(Sound of a gentle transition, then silence)**..."
[INFO] Added conversation part: Joe with ** So, Sarah, that was quite a story about antibod...
[INFO] Added conversation part: Sarah with **  Exactly!  It's mind-boggling.  Seven point sev...
[INFO] Added conversation part: Joe with **  Sure.  A negative control, in this context, is...
[INFO] Added conversation part: Sarah with **  So, it's like… a control group to make sure th...
[INFO] Added conversation part: Joe with **  Yeah, that's a reasonable simplification.  It'...
[INFO] Added conversation part: Sarah with **  I see.  And YCharOS's approach, with the colla...
[INFO] Added conversation part: Joe with ** That's a really good point.  YCharOS focuses on...
[INFO] Added conversation part: Sarah with **  So, essentially, while YCharOS provides a valu...
[INFO] Added conversation part: Joe with **  Precisely.  Think of it as a first filter.  It...
[INFO] Added conversation part: Sarah with ** It’s fascinating how much complexity there is. ...
[INFO] Added conversation part: Joe with ** My pleasure, Sarah.  It's a complex field, but ...
[INFO] No speaker pattern match found at line 13: "**(Sound of a gentle transition, then silence)**..."
[INFO] Successfully extracted 11 conversation parts
[INFO] Cleaned Text (Chunk 2): [
  {
    "speaker": "Joe",
    "text": "** So, Sarah, that was quite a story about antibody validation.  It really highlights the… uh… the sheer scale of the problem, right? Millions of antibodies on the market, and a significant portion apparently don't perform as advertised."
  },
  {
    "speaker": "Sarah",
    "text": "**  Exactly!  It's mind-boggling.  Seven point seven *million* antibodies. And the article really emphasized the importance of these negative controls.  Can you explain that a little more?  Why are they so crucial?"
  },
  {
    "speaker": "Joe",
    "text": "**  Sure.  A negative control, in this context, is essentially a sample that *shouldn't* show a positive result.  In the case of antibody validation, they use a cell line that lacks the target protein.  If the antibody still binds to this \"knock-out\" cell line, it suggests a lack of specificity. The antibody is binding to something *other* than the intended target.  It's reacting with something else in the cell, giving you a false positive.  That’s a big problem."
  },
  {
    "speaker": "Sarah",
    "text": "**  So, it's like… a control group to make sure the antibody is only binding to the intended protein and not just anything?  Is that a fair simplification?"
  },
  {
    "speaker": "Joe",
    "text": "**  Yeah, that's a reasonable simplification.  It's about isolating the signal from the noise, you know?  Without that negative control, you can't be confident that your positive results are actually due to the interaction with the target protein. You could be seeing a lot of non-specific binding."
  },
  {
    "speaker": "Sarah",
    "text": "**  I see.  And YCharOS's approach, with the collaboration between vendors and researchers, seems pretty revolutionary.  But what about the limitations?  The article mentioned that context matters— different tissues, different protocols. How does that affect the validity of the YCharOS findings?"
  },
  {
    "speaker": "Joe",
    "text": "** That's a really good point.  YCharOS focuses on a specific set of conditions, a standardized testing protocol.  While that provides a baseline, it doesn't necessarily guarantee performance across all possible experimental setups.  An antibody might work perfectly in their standardized test but fail in a different cell type or using a different technique.  That's inherent in the complexity of biological systems.  There's a lot of variability."
  },
  {
    "speaker": "Sarah",
    "text": "**  So, essentially, while YCharOS provides a valuable quality control measure, it's not a complete solution?  Researchers still need to be cautious and validate the antibody in their specific experimental context?"
  },
  {
    "speaker": "Joe",
    "text": "**  Precisely.  Think of it as a first filter.  It weeds out a lot of the clearly problematic antibodies,  but it doesn't guarantee perfect performance in every situation.  Further validation within the specific research context is still essential.  It's a step in the right direction, but not the final answer."
  },
  {
    "speaker": "Sarah",
    "text": "** It’s fascinating how much complexity there is. It highlights the need for constant vigilance and careful experimental design.  Thanks for explaining that, Joe.  This has been very enlightening."
  },
  {
    "speaker": "Joe",
    "text": "** My pleasure, Sarah.  It's a complex field, but hopefully, we've shed some light on it."
  }
]
[INFO] 

 ------------PROMPT to VERTEX AI-----------------
 You are generating a podcast conversation between Joe and Sarah.

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "you know," and short pauses.
4. Don't include any sound effects or background music.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

**Previous Context**:
** My pleasure, Sarah.  It's a complex field, but hopefully, we've shed some light on it.

Joe: Expanding the toolbox Even if good antibodies are available, they are not always easy to find. In 2009, Anita Bandrowski, founder and chief executive of the data-sharing platform SciCrunch in San Diego, California, and her colleagues were examining how difficult it was to identify antibodies in journal articles. After sifting through papers in the Journal of Neuroscience, they found that 90% of the antibodies cited lacked a catalogue number (codes used by ven- dors to label specific products)making them almost impossible to track down. To replicate an experiment, its important to have the right reagents and proper labelling is crucial to finding them, Bandrowski says. After seeing that a similar problem plagued other journals, Bandrowski and her colleagues decided to create unique, persistent identifiers for antibodies and other scientific resources, such as model organisms, which they called research resource identifiers, or RRIDs. Catalogue numbers can disappear if a com- pany discontinues a product and because companies create them independently, two different products might end up with the same one. RRIDs solve this. In 2014, Bandrowski and her team started a pilot project 3 with 25 journals, in which they asked authors to include RRIDs in their manuscripts. In the years since, more than 1,000journals have adopted policies that It never fails to amaze me how much of a hit or miss antibodies are. Nature | Vol 635 | 7 November 2024 | 27 request these identifiers. We currently have nearly one million citations to RRIDs from papers, says Bandrowski. Ultimately, the hope is that authors of every journal article will clearly label the resources they used, such as antibodies, with RRIDs, Bandrowski says. That wont change repro- ducibility by itself, but it is the first step. In addition to being able to track down antibodies, researchers need a way to choose which ones to use. In 2012, Andrew Chalmers, who was then a researcher at the University of Bath, UK, co-founded CiteAb, a search engine to help researchers find the most highly cited antibodies. Over the years, the platform has grown to include more than seven million antibodies and now also includes, when available, information regarding validations. In May, CiteAb began integrating YCharOSs characterization data onto its site. The big challenge is that antibodies are just used in so many different ways, for so many dif- ferent species that you cant tick off that an anti- body is good or bad, Chalmers says. Many say that knock-out validation is key, but less than 5% of antibodies on CiteAb have been validated in this way, either by suppliers or through other independent initiatives, such as YCharOS. Theres a long way to go, Chalmers says. Stakeholders get involved Like many others, Virk developed an interest in antibody reliability after a personal experience with bad antibodies. In 2016, Virk received a big grant to study the role of a protein called TRPA1 in airway inflammation. But one of his colleagues mentioned that, on the basis of his own experience, the antibodies he was working with might not be reliable. When Virk put TRPA1 antibodies to the test, he discovered that his colleague was right: of the three most-cited antibodies used to study TRPA1, two didnt detect the human protein at all, and the other detected several other proteins at the same time. That was a shock, Virk says. At that point, I wanted to leave science because if things are really this unreliable, whats the point? Instead of leaving academia, Virk co-founded the Only Good Antibodies (OGA) community last year, with the aim of bringing together stakeholders such as researchers, antibody manufacturers, funding agencies and publishers to tackle the problem of poorly performing antibodies. In February, the OGA community hosted its first work- shop, which included individuals from these various groups to discuss how to improve the reproducibility of research conducted with antibodies. 

 ------------END-----------------

[INFO] 

 -------RESPONSE FROM VERTEX AI---------
 Sarah: So Joe, that was quite a journey through the antibody identification crisis!  It sounds like a huge problem.  You mentioned RRIDs – Research Resource Identifiers – as a solution. Can you explain that a bit more simply?  I'm still a little fuzzy on how they actually help.

Joe:  Sure, Sarah.  Think of it like this:  before RRIDs, each company might give an antibody its own unique code, or sometimes they didn't even have codes.  If the company went out of business, poof, the code was gone.  And even if they did, different companies might use the same number for entirely different antibodies.  It was a mess.  RRIDs are like permanent, universal identifiers.  They're unique to each antibody, no matter who makes it, and they stick around even if the manufacturer stops selling it. It makes finding and verifying the specific antibody used in a study much, much easier.  It's a crucial first step towards reproducibility.

Sarah: Okay, that makes more sense. So, it's like a universal product code, but specifically for research reagents?  That's a pretty big improvement already.  But you also mentioned CiteAb, a search engine for antibodies. How does that factor into the reliability issue?

Joe: Right. CiteAb is a different approach.  It doesn't solve the labelling problem like RRIDs, but it helps researchers *choose* better antibodies.  It essentially ranks antibodies based on how often they've been cited in publications.  The idea is, if an antibody's been used successfully in many studies, it's probably a more reliable reagent.  They're also starting to incorporate validation data, which is huge.

Sarah:  So, it's a popularity contest, but for science?  That's...interesting.  But doesn't that mean a poorly validated antibody could become popular just by chance, or because it was used in many early studies?  Wouldn't that skew the results?

Joe:  That's a really good point, Sarah.  You're absolutely right.  Popularity doesn't equal quality.  That's why the validation data is so important. CiteAb is trying to incorporate more of that information, but it's a slow process, because, well, validating antibodies is a lot of work.  And, uh... you know... there's a huge backlog of existing antibodies.

Sarah:  Right. So, even with CiteAb and RRIDs, there's still a huge challenge with actually validating these antibodies to begin with.  That's where the Only Good Antibodies community comes in, right?

Joe: Exactly.  The OGA community is trying to tackle the problem from a broader perspective.  It's bringing together researchers, manufacturers, funders... everyone involved in the process. The goal is to create better standards, improve validation methods, and encourage more transparency throughout the whole antibody lifecycle.  It's a more collaborative approach to solving what is, frankly, a pretty significant problem in the field.

Sarah:  It sounds like a massive undertaking.  It makes you wonder how much unreliable research is out there because of this antibody issue.  It's a bit daunting, but also encouraging to see these initiatives popping up to try and fix it.  Thanks for explaining all this, Joe!  This has been really eye-opening.

Joe: My pleasure, Sarah.  It's a long road, but hopefully, these efforts will improve the situation significantly.  And, you know, it's not just about antibodies; the same principles of transparency and standardization apply to many other research reagents as well.
 

 ------------END-----------------

[INFO] Processing 10 lines of text
[INFO] Added conversation part: Sarah with So Joe, that was quite a journey through the antib...
[INFO] Added conversation part: Joe with Sure, Sarah.  Think of it like this:  before RRIDs...
[INFO] Added conversation part: Sarah with Okay, that makes more sense. So, it's like a unive...
[INFO] Added conversation part: Joe with Right. CiteAb is a different approach.  It doesn't...
[INFO] Added conversation part: Sarah with So, it's a popularity contest, but for science?  T...
[INFO] Added conversation part: Joe with That's a really good point, Sarah.  You're absolut...
[INFO] Added conversation part: Sarah with Right. So, even with CiteAb and RRIDs, there's sti...
[INFO] Added conversation part: Joe with Exactly.  The OGA community is trying to tackle th...
[INFO] Added conversation part: Sarah with It sounds like a massive undertaking.  It makes yo...
[INFO] Added conversation part: Joe with My pleasure, Sarah.  It's a long road, but hopeful...
[INFO] Successfully extracted 10 conversation parts
[INFO] Cleaned Text (Chunk 3): [
  {
    "speaker": "Sarah",
    "text": "So Joe, that was quite a journey through the antibody identification crisis!  It sounds like a huge problem.  You mentioned RRIDs – Research Resource Identifiers – as a solution. Can you explain that a bit more simply?  I'm still a little fuzzy on how they actually help."
  },
  {
    "speaker": "Joe",
    "text": "Sure, Sarah.  Think of it like this:  before RRIDs, each company might give an antibody its own unique code, or sometimes they didn't even have codes.  If the company went out of business, poof, the code was gone.  And even if they did, different companies might use the same number for entirely different antibodies.  It was a mess.  RRIDs are like permanent, universal identifiers.  They're unique to each antibody, no matter who makes it, and they stick around even if the manufacturer stops selling it. It makes finding and verifying the specific antibody used in a study much, much easier.  It's a crucial first step towards reproducibility."
  },
  {
    "speaker": "Sarah",
    "text": "Okay, that makes more sense. So, it's like a universal product code, but specifically for research reagents?  That's a pretty big improvement already.  But you also mentioned CiteAb, a search engine for antibodies. How does that factor into the reliability issue?"
  },
  {
    "speaker": "Joe",
    "text": "Right. CiteAb is a different approach.  It doesn't solve the labelling problem like RRIDs, but it helps researchers *choose* better antibodies.  It essentially ranks antibodies based on how often they've been cited in publications.  The idea is, if an antibody's been used successfully in many studies, it's probably a more reliable reagent.  They're also starting to incorporate validation data, which is huge."
  },
  {
    "speaker": "Sarah",
    "text": "So, it's a popularity contest, but for science?  That's...interesting.  But doesn't that mean a poorly validated antibody could become popular just by chance, or because it was used in many early studies?  Wouldn't that skew the results?"
  },
  {
    "speaker": "Joe",
    "text": "That's a really good point, Sarah.  You're absolutely right.  Popularity doesn't equal quality.  That's why the validation data is so important. CiteAb is trying to incorporate more of that information, but it's a slow process, because, well, validating antibodies is a lot of work.  And, uh... you know... there's a huge backlog of existing antibodies."
  },
  {
    "speaker": "Sarah",
    "text": "Right. So, even with CiteAb and RRIDs, there's still a huge challenge with actually validating these antibodies to begin with.  That's where the Only Good Antibodies community comes in, right?"
  },
  {
    "speaker": "Joe",
    "text": "Exactly.  The OGA community is trying to tackle the problem from a broader perspective.  It's bringing together researchers, manufacturers, funders... everyone involved in the process. The goal is to create better standards, improve validation methods, and encourage more transparency throughout the whole antibody lifecycle.  It's a more collaborative approach to solving what is, frankly, a pretty significant problem in the field."
  },
  {
    "speaker": "Sarah",
    "text": "It sounds like a massive undertaking.  It makes you wonder how much unreliable research is out there because of this antibody issue.  It's a bit daunting, but also encouraging to see these initiatives popping up to try and fix it.  Thanks for explaining all this, Joe!  This has been really eye-opening."
  },
  {
    "speaker": "Joe",
    "text": "My pleasure, Sarah.  It's a long road, but hopefully, these efforts will improve the situation significantly.  And, you know, it's not just about antibodies; the same principles of transparency and standardization apply to many other research reagents as well."
  }
]
[INFO] 

 ------------PROMPT to VERTEX AI-----------------
 You are generating a podcast conversation between Joe and Sarah.

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "you know," and short pauses.
4. Don't include any sound effects or background music.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

**Previous Context**:
My pleasure, Sarah.  It's a long road, but hopefully, these efforts will improve the situation significantly.  And, you know, it's not just about antibodies; the same principles of transparency and standardization apply to many other research reagents as well.

Sarah: They were joined by NC3Rs, a scientific organization and funder, based in London that focuses on reducing the use of animals in research. Better antibodies means fewer animals are used in the process of producing these molecules and conducting experiments with them. Currently, the OGA community is working on a project to help researchers choose the right antibodies for their work and to make it easier for them to identify, use and share data about antibody quality. It is also piloting an YCharOS site at the University of Leicester the first outside Canada which will focus on antibodies used in respiratory sciences. The OGA community is also working with funders and publishers to find ways to reward researchers for adopting antibody-related best practices. Examples of such rewards include grants for scientists taking part in antibody-validation initiatives. Manufacturers have also been taking steps to improve antibody performance. In addition to increasingly conducting their own knock-out validations, a number of suppliers are also alter- ing the way some of their products are made. The need to modify antibody-production practices was brought to the fore in 2015, when a group of more than 100 scientists penned a commentary in Nature calling for the community to shift from antibodies gener- ated by immune cells or immunecancer-cell hybrids, to what are known as recombinant antibodies 4 . Recombinant antibodies are produced in genetically engineered cells pro- grammed to make a specific antibody. Using these antibodies exclusively, the authors argued, would enable infinite production of antibodies that do not vary from batch to batch a key problem with the older methods. A few manufacturers are shifting towards making more recombinant antibodies. For example, Abcam, an antibody supplier in Cambridge, UK, has added more than 32,000 of them to their portfolio. Facilitating the move towards recombinants across life-science research is a key part of improv- ing reproducibility, says Hannah Cable, the vice-president of new product development at Abcam. Thats something that antibody suppliers should be doing. Rob Meijers, director of the antibody plat- form at the Institute for Protein Innovation in Boston, Massachusetts, a non-profit research organization that makes recombinant anti- bodies, says that this shift simply makes more business sense. Theyre much more reproduc- ible, you can standardize the process for them, and the user feedback is very positive, he says. CiteAbs data have revealed that scientists behaviour around antibody use has shifted drastically over the past decade. About 20% of papers from 2023 that involved antibodies used recombinants. Thats a big change from where we were ten years ago, says Chalmers, who is now CiteAbs chief executive. Although the ongoing efforts to improve antibody reliability are a move in the right direction, changing scientists behaviour remains one of the biggest challenges, say those leading the charge. There are cases in which researchers dont want to hear that an antibody theyve been using for their experi- ments isnt actually doing what its meant to, Williams says. If somebody is happy with the result of an antibody, its being used regard- less, even if its certain that it doesnt bind this protein, Williams says. Ultimately, she adds, you can never get around the fact that the researcher will have to do validations. Still, many scientists are hopeful that recent efforts will lead to much needed change. Im optimistic that things are getting better, Radtke says. What Im so encouraged by is the young generation of scientists, who have more of a wolf-pack mentality, and are working together to solve this problem as a community. Diana Kwon writes for Nature from Berlin. 1. Laflamme, C. et al. eLife 8, e48363 (2019). 2. Ayoubi, R. et al. eLife 12, RP91645 (2023). 3. Bandrowski, A. et al. J. Comp. Neurol. 524, 822 (2016). 4. Bradbury, A. & Plckthun, A. Nature 518, 2729 (2015). 

 ------------END-----------------

[INFO] 

 -------RESPONSE FROM VERTEX AI---------
 Joe: So, Sarah, you've laid out a really comprehensive overview of the antibody situation.  It's a messy problem, isn't it?  The shift towards recombinant antibodies is key, though.  It's not just about better performance; it's about the reproducibility.  Traditional methods, using immune cells,  inherently lead to batch-to-batch variation. You just can't guarantee the same antibody every time.

Sarah: Right, and that's a huge problem for research, isn't it?  I mean, how can you trust your results if the very building blocks of your experiment – the antibodies – are inconsistent?  It makes replication almost impossible.

Joe: Exactly.  Recombinant antibodies, produced in genetically engineered cells, solve that. The process is standardized. You program the cell to produce a *specific* antibody, and you get the same thing every time, theoretically.  There's still quality control needed, of course, but the fundamental variability is drastically reduced.  Think of it like this... well, maybe that's not the best approach.  Let me just say the inherent variability is the core issue, and recombinant methods address that directly.

Sarah:  Okay, so less variability.  But you mentioned "theoretically." What are some of the remaining challenges?  It seems like even with recombinant antibodies, there's still a need for validation.

Joe:  Absolutely.  Even with a standardized production process, you still need to verify that the antibody is doing what it's supposed to do – binding to the correct target.   There are still instances of antibodies not performing as expected, even if they are recombinant.  This is where initiatives like the ones you mentioned, pushing for better data sharing and standardization, are crucial.  It’s a collaborative effort, not just on the manufacturing side, but also on the research side. Researchers need to be more rigorous in validating their antibodies.


Sarah:  So it's not a simple "switch and everything is fixed" kind of thing.  It's a multi-pronged approach.  It sounds like a cultural shift is needed as well, getting researchers to adopt better practices, even if it means re-evaluating their existing work.  That seems like a huge hurdle.

Joe:  It is a huge hurdle.  Scientists, like anyone, can be hesitant to change established methods, especially if they've already published results using a particular antibody.  But, you know,  the long-term benefit – more reliable, reproducible research – far outweighs the short-term inconvenience. The younger generation, as you highlighted, seems more receptive to this collaborative approach, which is encouraging.

Sarah:  It's definitely encouraging.  It sounds like a long, slow process, but the potential benefits for scientific advancement are huge.  Thanks, Joe, for clarifying that.  It's a complex issue, but you've helped break it down nicely.

Joe:  My pleasure, Sarah.  It's a complex issue, and it's going to take time and a lot of collaboration to fully resolve. But the progress is definitely happening.
 

 ------------END-----------------

[INFO] Processing 9 lines of text
[INFO] Added conversation part: Joe with So, Sarah, you've laid out a really comprehensive ...
[INFO] Added conversation part: Sarah with Right, and that's a huge problem for research, isn...
[INFO] Added conversation part: Joe with Exactly.  Recombinant antibodies, produced in gene...
[INFO] Added conversation part: Sarah with Okay, so less variability.  But you mentioned "the...
[INFO] Added conversation part: Joe with Absolutely.  Even with a standardized production p...
[INFO] Added conversation part: Sarah with So it's not a simple "switch and everything is fix...
[INFO] Added conversation part: Joe with It is a huge hurdle.  Scientists, like anyone, can...
[INFO] Added conversation part: Sarah with It's definitely encouraging.  It sounds like a lon...
[INFO] Added conversation part: Joe with My pleasure, Sarah.  It's a complex issue, and it'...
[INFO] Successfully extracted 9 conversation parts
[INFO] Cleaned Text (Chunk 4): [
  {
    "speaker": "Joe",
    "text": "So, Sarah, you've laid out a really comprehensive overview of the antibody situation.  It's a messy problem, isn't it?  The shift towards recombinant antibodies is key, though.  It's not just about better performance; it's about the reproducibility.  Traditional methods, using immune cells,  inherently lead to batch-to-batch variation. You just can't guarantee the same antibody every time."
  },
  {
    "speaker": "Sarah",
    "text": "Right, and that's a huge problem for research, isn't it?  I mean, how can you trust your results if the very building blocks of your experiment – the antibodies – are inconsistent?  It makes replication almost impossible."
  },
  {
    "speaker": "Joe",
    "text": "Exactly.  Recombinant antibodies, produced in genetically engineered cells, solve that. The process is standardized. You program the cell to produce a *specific* antibody, and you get the same thing every time, theoretically.  There's still quality control needed, of course, but the fundamental variability is drastically reduced.  Think of it like this... well, maybe that's not the best approach.  Let me just say the inherent variability is the core issue, and recombinant methods address that directly."
  },
  {
    "speaker": "Sarah",
    "text": "Okay, so less variability.  But you mentioned \"theoretically.\" What are some of the remaining challenges?  It seems like even with recombinant antibodies, there's still a need for validation."
  },
  {
    "speaker": "Joe",
    "text": "Absolutely.  Even with a standardized production process, you still need to verify that the antibody is doing what it's supposed to do – binding to the correct target.   There are still instances of antibodies not performing as expected, even if they are recombinant.  This is where initiatives like the ones you mentioned, pushing for better data sharing and standardization, are crucial.  It’s a collaborative effort, not just on the manufacturing side, but also on the research side. Researchers need to be more rigorous in validating their antibodies."
  },
  {
    "speaker": "Sarah",
    "text": "So it's not a simple \"switch and everything is fixed\" kind of thing.  It's a multi-pronged approach.  It sounds like a cultural shift is needed as well, getting researchers to adopt better practices, even if it means re-evaluating their existing work.  That seems like a huge hurdle."
  },
  {
    "speaker": "Joe",
    "text": "It is a huge hurdle.  Scientists, like anyone, can be hesitant to change established methods, especially if they've already published results using a particular antibody.  But, you know,  the long-term benefit – more reliable, reproducible research – far outweighs the short-term inconvenience. The younger generation, as you highlighted, seems more receptive to this collaborative approach, which is encouraging."
  },
  {
    "speaker": "Sarah",
    "text": "It's definitely encouraging.  It sounds like a long, slow process, but the potential benefits for scientific advancement are huge.  Thanks, Joe, for clarifying that.  It's a complex issue, but you've helped break it down nicely."
  },
  {
    "speaker": "Joe",
    "text": "My pleasure, Sarah.  It's a complex issue, and it's going to take time and a lot of collaboration to fully resolve. But the progress is definitely happening."
  }
]
[INFO] 

 ==================Last Chunk===================

[INFO] 

 ------------PROMPT to VERTEX AI-----------------
 You are generating a podcast conversation between Joe and Sarah.

**Guidelines**:
1. Joe provides detailed technical insights but avoids overusing analogies. Instead, focus on straightforward, clear explanations.
2. Sarah asks probing, thoughtful questions, occasionally offers her own insights, and challenges Joe to explain concepts simply and conversationally.
3. Both speakers use natural human speech patterns, including filler words like "you know," and short pauses.
4. Don't include any sound effects or background music.

**Focus**:
- Avoid excessive use of analogies. Use one or two if necessary for clarity but prioritize clear, direct explanations.
- Include natural conversational flow with interruptions, backtracking, and filler words to make the dialogue feel authentic.
- Encourage a natural dialogue with varied contributions from both speakers.

**Tone**:
- Engaging, relatable, and spontaneous.
- Emphasize human-like emotions, with occasional humor or lighthearted moments.
- Balance technical depth with conversational relatability, avoiding overly formal language.

**Previous Context**:
My pleasure, Sarah.  It's a complex issue, and it's going to take time and a lot of collaboration to fully resolve. But the progress is definitely happening.

Joe: WAYS TO VALIDATE Researchers test antibodies that they wish to use in several ways. They can stain a sample of cells that express a protein of interest using immunohistochemistry. Western blotting can reveal whether an antibody binds to a specific protein with an expected molecular weight. And scientists can use immunoprecipitation to pull the protein out of a mixture and then check its identity using mass spectrometry. Immunohistochemistry Antibodies label cells with the target protein Cells without target protein Western blot Molecular- weight reference ladder Imummoprecipitation Antibodies attached to beads Protein of interest is captured and then confirmed using mass spectrometry A single band is found at the expected molecular weight I wanted to leave science because if things are really this unreliable, whats the point? 28 | Nature | Vol 635 | 7 November 2024 Feature.

Speaker Joe should End the podcast by saying this: Thank you for joining us on this episode of Science Odyssey, where we explored the groundbreaking research shaping our understanding of the world. 
If you enjoyed this journey, don't forget to subscribe, leave a review, and share the podcast with fellow science enthusiasts.
Until next time, keep exploring the wonders of science—your next discovery awaits! 

 ------------END-----------------

[INFO] 

 -------RESPONSE FROM VERTEX AI---------
 (Sound of a gentle microphone adjustment)

Sarah: So, Joe, you were just saying about validating antibodies…  It sounds… complicated.  Can you break that down a bit more for our listeners?  I mean, I understand the *idea* of needing to check if an antibody is actually working, but the methods…

Joe:  Yeah, it's not exactly straightforward, you know?  There are several key techniques.  Um, one is immunohistochemistry.  Basically, you take a sample of cells, and you apply your antibody.  If the antibody binds to a specific protein within those cells, you see a visual signal – a stain, essentially.  If the protein's there, the antibody sticks, and you see it.  If not… nothing.

Sarah: Okay, so it's like a visual confirmation.  Simple enough, in principle.  What about the other methods?

Joe:  Right.  Then there's Western blotting. This one's a little different.  Here, you separate proteins by size using a gel, kind of like separating candies by weight.  Then, you apply your antibody. If the antibody binds to your target protein, you'll see a band at a specific point on the gel, corresponding to the protein's molecular weight.  It's a more precise way to confirm the antibody is binding to the *right* protein.  You get a clearer picture of the target's size.

Sarah:  So, immunohistochemistry is more of a "is it there?" test, while Western blotting is more of a "is it the right size?" test?

Joe:  Exactly!  You've got it.  And then there's immunoprecipitation.  This is where things get a bit more involved.  Here, we use the antibody to literally fish out the target protein from a complex mixture of proteins.  Think of it like using a magnet to pull out specific metal pieces from a pile of junk.  Once we've isolated the protein, we can then use mass spectrometry to identify it conclusively.  That gives us the ultimate confirmation.

Sarah:  Wow, mass spectrometry… sounds high-tech.  So, essentially, you're using three different approaches to verify that the antibody is doing what it's supposed to do – binding to the correct protein.  And each method offers a different level of detail and certainty.

Joe:  Precisely.  It's a multi-layered approach to ensure reliability.  And, you know, even with all these techniques, there's always a degree of uncertainty inherent in the process.  That's why rigorous validation is so crucial in scientific research.  It's not just about getting a result; it's about making sure that result is trustworthy.

Sarah:  That makes a lot of sense.  It sounds like a lot of work though!  No wonder researchers are always so busy.

Joe:  (Chuckles)  It is!  But it’s essential to ensure the quality and reliability of the research.  It's all part of the scientific process.

Sarah:  Absolutely.  Thanks for explaining that so clearly, Joe.  I think our listeners now have a much better understanding of antibody validation.

Joe: My pleasure, Sarah. Thank you for joining us on this episode of Science Odyssey, where we explored the groundbreaking research shaping our understanding of the world. If you enjoyed this journey, don't forget to subscribe, leave a review, and share the podcast with fellow science enthusiasts. Until next time, keep exploring the wonders of science—your next discovery awaits!
 

 ------------END-----------------

[INFO] Processing 13 lines of text
[INFO] No speaker pattern match found at line 1: "(Sound of a gentle microphone adjustment)..."
[INFO] Added conversation part: Sarah with So, Joe, you were just saying about validating ant...
[INFO] Added conversation part: Joe with Yeah, it's not exactly straightforward, you know? ...
[INFO] Added conversation part: Sarah with Okay, so it's like a visual confirmation.  Simple ...
[INFO] Added conversation part: Joe with Right.  Then there's Western blotting. This one's ...
[INFO] Added conversation part: Sarah with So, immunohistochemistry is more of a "is it there...
[INFO] Added conversation part: Joe with Exactly!  You've got it.  And then there's immunop...
[INFO] Added conversation part: Sarah with Wow, mass spectrometry… sounds high-tech.  So, ess...
[INFO] Added conversation part: Joe with Precisely.  It's a multi-layered approach to ensur...
[INFO] Added conversation part: Sarah with That makes a lot of sense.  It sounds like a lot o...
[INFO] Added conversation part: Joe with (Chuckles)  It is!  But it’s essential to ensure t...
[INFO] Added conversation part: Sarah with Absolutely.  Thanks for explaining that so clearly...
[INFO] Added conversation part: Joe with My pleasure, Sarah. Thank you for joining us on th...
[INFO] Successfully extracted 12 conversation parts
[INFO] Cleaned Text (Chunk 5): [
  {
    "speaker": "Sarah",
    "text": "So, Joe, you were just saying about validating antibodies…  It sounds… complicated.  Can you break that down a bit more for our listeners?  I mean, I understand the *idea* of needing to check if an antibody is actually working, but the methods…"
  },
  {
    "speaker": "Joe",
    "text": "Yeah, it's not exactly straightforward, you know?  There are several key techniques.  Um, one is immunohistochemistry.  Basically, you take a sample of cells, and you apply your antibody.  If the antibody binds to a specific protein within those cells, you see a visual signal – a stain, essentially.  If the protein's there, the antibody sticks, and you see it.  If not… nothing."
  },
  {
    "speaker": "Sarah",
    "text": "Okay, so it's like a visual confirmation.  Simple enough, in principle.  What about the other methods?"
  },
  {
    "speaker": "Joe",
    "text": "Right.  Then there's Western blotting. This one's a little different.  Here, you separate proteins by size using a gel, kind of like separating candies by weight.  Then, you apply your antibody. If the antibody binds to your target protein, you'll see a band at a specific point on the gel, corresponding to the protein's molecular weight.  It's a more precise way to confirm the antibody is binding to the *right* protein.  You get a clearer picture of the target's size."
  },
  {
    "speaker": "Sarah",
    "text": "So, immunohistochemistry is more of a \"is it there?\" test, while Western blotting is more of a \"is it the right size?\" test?"
  },
  {
    "speaker": "Joe",
    "text": "Exactly!  You've got it.  And then there's immunoprecipitation.  This is where things get a bit more involved.  Here, we use the antibody to literally fish out the target protein from a complex mixture of proteins.  Think of it like using a magnet to pull out specific metal pieces from a pile of junk.  Once we've isolated the protein, we can then use mass spectrometry to identify it conclusively.  That gives us the ultimate confirmation."
  },
  {
    "speaker": "Sarah",
    "text": "Wow, mass spectrometry… sounds high-tech.  So, essentially, you're using three different approaches to verify that the antibody is doing what it's supposed to do – binding to the correct protein.  And each method offers a different level of detail and certainty."
  },
  {
    "speaker": "Joe",
    "text": "Precisely.  It's a multi-layered approach to ensure reliability.  And, you know, even with all these techniques, there's always a degree of uncertainty inherent in the process.  That's why rigorous validation is so crucial in scientific research.  It's not just about getting a result; it's about making sure that result is trustworthy."
  },
  {
    "speaker": "Sarah",
    "text": "That makes a lot of sense.  It sounds like a lot of work though!  No wonder researchers are always so busy."
  },
  {
    "speaker": "Joe",
    "text": "(Chuckles)  It is!  But it’s essential to ensure the quality and reliability of the research.  It's all part of the scientific process."
  },
  {
    "speaker": "Sarah",
    "text": "Absolutely.  Thanks for explaining that so clearly, Joe.  I think our listeners now have a much better understanding of antibody validation."
  },
  {
    "speaker": "Joe",
    "text": "My pleasure, Sarah. Thank you for joining us on this episode of Science Odyssey, where we explored the groundbreaking research shaping our understanding of the world. If you enjoyed this journey, don't forget to subscribe, leave a review, and share the podcast with fellow science enthusiasts. Until next time, keep exploring the wonders of science—your next discovery awaits!"
  }
]
[INFO] 
--- Full Generated Conversation ---
[INFO] Joe: Welcome to Science Odyssey, the podcast where we journey through groundbreaking scientific studies, unraveling the mysteries behind the research that shapes our world. Thanks for tuning in!  So, Sarah, today we're diving into a fascinating story about antibodies – or rather, the *problem* of antibodies in scientific research.  It's a surprisingly big deal.
[INFO] Sarah: A big deal? Antibodies? I mean, I know they're used in lots of research, but what's the problem?  I always assumed they were, you know, pretty reliable tools.
[INFO] Joe: That's exactly what a lot of people assumed, um, for a long time.  The problem is, many commercially available antibodies – the ones scientists buy and use in their labs – just don't work as advertised.  They might not bind to the specific protein they're supposed to, or they might bind to other proteins too, giving you completely misleading results.
[INFO] Sarah: So, false positives, essentially?  That sounds…messy.  And costly, I imagine.
[INFO] Joe: Exactly! Messy and incredibly costly.  Think about it: researchers spend time, money, and effort designing experiments, only to find out their results are unreliable because of a faulty antibody.  This has, ah, contributed to what some call a reproducibility crisis in biology.  Thousands of papers, potentially, are based on unreliable data.
[INFO] Sarah: Wow.  So, can you tell me more about this?  How did this even happen?  Was it just poor quality control, or something more systemic?
[INFO] Joe: It's a bit of both, I think.  For decades, scientists often made their own antibodies.  But then commercial production took over, and, um, the quality control wasn't always great. Plus, there wasn't really a standardized way to test the antibodies before they hit the market.  One researcher, Carl Laflamme,  highlighted this perfectly. He was studying a protein linked to motor neuron disease, and he found that out of sixteen commercially available antibodies supposedly targeting this protein, only three actually worked properly.
[INFO] Sarah: Only three out of sixteen? That's... shockingly low.  So what's being done to fix this?
[INFO] Joe: There are several initiatives springing up.  One, called iCharOS, aims to comprehensively characterize every human protein antibody.  They're systematically testing them to see which ones are truly reliable.  There's also a push for better production methods, improved testing standards, and, you know, just better practices among researchers when selecting and using these antibodies.  It's a multi-pronged approach involving vendors, funding agencies, and publishers.
[INFO] Sarah: It sounds like a huge undertaking.  But it's definitely necessary, right? I mean, the implications of unreliable research are far-reaching.
[INFO] Joe: Exactly.  It's about ensuring the integrity of scientific research, which is crucial for advancements in medicine and other fields.  It’s a long road, but there's definitely hope that things are starting to change.
[INFO] Sarah: It's a fascinating story, and a sobering one. Thanks for shedding light on this, Joe.  I bet a lot of our listeners will find this as eye-opening as I did.
[INFO] Joe: My pleasure, Sarah.  And that's all the time we have for today’s episode of Science Odyssey.  Join us next time for another journey into the world of scientific discovery!
[INFO] Joe: ** So, Sarah, that was quite a story about antibody validation.  It really highlights the… uh… the sheer scale of the problem, right? Millions of antibodies on the market, and a significant portion apparently don't perform as advertised.
[INFO] Sarah: **  Exactly!  It's mind-boggling.  Seven point seven *million* antibodies. And the article really emphasized the importance of these negative controls.  Can you explain that a little more?  Why are they so crucial?
[INFO] Joe: **  Sure.  A negative control, in this context, is essentially a sample that *shouldn't* show a positive result.  In the case of antibody validation, they use a cell line that lacks the target protein.  If the antibody still binds to this "knock-out" cell line, it suggests a lack of specificity. The antibody is binding to something *other* than the intended target.  It's reacting with something else in the cell, giving you a false positive.  That’s a big problem.
[INFO] Sarah: **  So, it's like… a control group to make sure the antibody is only binding to the intended protein and not just anything?  Is that a fair simplification?
[INFO] Joe: **  Yeah, that's a reasonable simplification.  It's about isolating the signal from the noise, you know?  Without that negative control, you can't be confident that your positive results are actually due to the interaction with the target protein. You could be seeing a lot of non-specific binding.
[INFO] Sarah: **  I see.  And YCharOS's approach, with the collaboration between vendors and researchers, seems pretty revolutionary.  But what about the limitations?  The article mentioned that context matters— different tissues, different protocols. How does that affect the validity of the YCharOS findings?
[INFO] Sarah: **  So, essentially, while YCharOS provides a valuable quality control measure, it's not a complete solution?  Researchers still need to be cautious and validate the antibody in their specific experimental context?
[INFO] Joe: ** That's a really good point.  YCharOS focuses on a specific set of conditions, a standardized testing protocol.  While that provides a baseline, it doesn't necessarily guarantee performance across all possible experimental setups.  An antibody might work perfectly in their standardized test but fail in a different cell type or using a different technique.  That's inherent in the complexity of biological systems.  There's a lot of variability.
[INFO] Joe: **  Precisely.  Think of it as a first filter.  It weeds out a lot of the clearly problematic antibodies,  but it doesn't guarantee perfect performance in every situation.  Further validation within the specific research context is still essential.  It's a step in the right direction, but not the final answer.
[INFO] Sarah: ** It’s fascinating how much complexity there is. It highlights the need for constant vigilance and careful experimental design.  Thanks for explaining that, Joe.  This has been very enlightening.
[INFO] Joe: ** My pleasure, Sarah.  It's a complex field, but hopefully, we've shed some light on it.
[INFO] Sarah: So Joe, that was quite a journey through the antibody identification crisis!  It sounds like a huge problem.  You mentioned RRIDs – Research Resource Identifiers – as a solution. Can you explain that a bit more simply?  I'm still a little fuzzy on how they actually help.
[INFO] Joe: Sure, Sarah.  Think of it like this:  before RRIDs, each company might give an antibody its own unique code, or sometimes they didn't even have codes.  If the company went out of business, poof, the code was gone.  And even if they did, different companies might use the same number for entirely different antibodies.  It was a mess.  RRIDs are like permanent, universal identifiers.  They're unique to each antibody, no matter who makes it, and they stick around even if the manufacturer stops selling it. It makes finding and verifying the specific antibody used in a study much, much easier.  It's a crucial first step towards reproducibility.
[INFO] Sarah: Okay, that makes more sense. So, it's like a universal product code, but specifically for research reagents?  That's a pretty big improvement already.  But you also mentioned CiteAb, a search engine for antibodies. How does that factor into the reliability issue?
[INFO] Joe: Right. CiteAb is a different approach.  It doesn't solve the labelling problem like RRIDs, but it helps researchers *choose* better antibodies.  It essentially ranks antibodies based on how often they've been cited in publications.  The idea is, if an antibody's been used successfully in many studies, it's probably a more reliable reagent.  They're also starting to incorporate validation data, which is huge.
[INFO] Sarah: So, it's a popularity contest, but for science?  That's...interesting.  But doesn't that mean a poorly validated antibody could become popular just by chance, or because it was used in many early studies?  Wouldn't that skew the results?
[INFO] Joe: That's a really good point, Sarah.  You're absolutely right.  Popularity doesn't equal quality.  That's why the validation data is so important. CiteAb is trying to incorporate more of that information, but it's a slow process, because, well, validating antibodies is a lot of work.  And, uh... you know... there's a huge backlog of existing antibodies.
[INFO] Joe: Exactly.  The OGA community is trying to tackle the problem from a broader perspective.  It's bringing together researchers, manufacturers, funders... everyone involved in the process. The goal is to create better standards, improve validation methods, and encourage more transparency throughout the whole antibody lifecycle.  It's a more collaborative approach to solving what is, frankly, a pretty significant problem in the field.
[INFO] Sarah: It sounds like a massive undertaking.  It makes you wonder how much unreliable research is out there because of this antibody issue.  It's a bit daunting, but also encouraging to see these initiatives popping up to try and fix it.  Thanks for explaining all this, Joe!  This has been really eye-opening.
[INFO] Sarah: Right. So, even with CiteAb and RRIDs, there's still a huge challenge with actually validating these antibodies to begin with.  That's where the Only Good Antibodies community comes in, right?
[INFO] Joe: My pleasure, Sarah.  It's a long road, but hopefully, these efforts will improve the situation significantly.  And, you know, it's not just about antibodies; the same principles of transparency and standardization apply to many other research reagents as well.
[INFO] Joe: So, Sarah, you've laid out a really comprehensive overview of the antibody situation.  It's a messy problem, isn't it?  The shift towards recombinant antibodies is key, though.  It's not just about better performance; it's about the reproducibility.  Traditional methods, using immune cells,  inherently lead to batch-to-batch variation. You just can't guarantee the same antibody every time.
[INFO] Sarah: Right, and that's a huge problem for research, isn't it?  I mean, how can you trust your results if the very building blocks of your experiment – the antibodies – are inconsistent?  It makes replication almost impossible.
[INFO] Joe: Exactly.  Recombinant antibodies, produced in genetically engineered cells, solve that. The process is standardized. You program the cell to produce a *specific* antibody, and you get the same thing every time, theoretically.  There's still quality control needed, of course, but the fundamental variability is drastically reduced.  Think of it like this... well, maybe that's not the best approach.  Let me just say the inherent variability is the core issue, and recombinant methods address that directly.
[INFO] Sarah: Okay, so less variability.  But you mentioned "theoretically." What are some of the remaining challenges?  It seems like even with recombinant antibodies, there's still a need for validation.
[INFO] Joe: Absolutely.  Even with a standardized production process, you still need to verify that the antibody is doing what it's supposed to do – binding to the correct target.   There are still instances of antibodies not performing as expected, even if they are recombinant.  This is where initiatives like the ones you mentioned, pushing for better data sharing and standardization, are crucial.  It’s a collaborative effort, not just on the manufacturing side, but also on the research side. Researchers need to be more rigorous in validating their antibodies.
[INFO] Sarah: So it's not a simple "switch and everything is fixed" kind of thing.  It's a multi-pronged approach.  It sounds like a cultural shift is needed as well, getting researchers to adopt better practices, even if it means re-evaluating their existing work.  That seems like a huge hurdle.
[INFO] Joe: It is a huge hurdle.  Scientists, like anyone, can be hesitant to change established methods, especially if they've already published results using a particular antibody.  But, you know,  the long-term benefit – more reliable, reproducible research – far outweighs the short-term inconvenience. The younger generation, as you highlighted, seems more receptive to this collaborative approach, which is encouraging.
[INFO] Sarah: It's definitely encouraging.  It sounds like a long, slow process, but the potential benefits for scientific advancement are huge.  Thanks, Joe, for clarifying that.  It's a complex issue, but you've helped break it down nicely.
[INFO] Joe: My pleasure, Sarah.  It's a complex issue, and it's going to take time and a lot of collaboration to fully resolve. But the progress is definitely happening.
[INFO] Sarah: So, Joe, you were just saying about validating antibodies…  It sounds… complicated.  Can you break that down a bit more for our listeners?  I mean, I understand the *idea* of needing to check if an antibody is actually working, but the methods…
[INFO] Joe: Yeah, it's not exactly straightforward, you know?  There are several key techniques.  Um, one is immunohistochemistry.  Basically, you take a sample of cells, and you apply your antibody.  If the antibody binds to a specific protein within those cells, you see a visual signal – a stain, essentially.  If the protein's there, the antibody sticks, and you see it.  If not… nothing.
[INFO] Sarah: Okay, so it's like a visual confirmation.  Simple enough, in principle.  What about the other methods?
[INFO] Joe: Right.  Then there's Western blotting. This one's a little different.  Here, you separate proteins by size using a gel, kind of like separating candies by weight.  Then, you apply your antibody. If the antibody binds to your target protein, you'll see a band at a specific point on the gel, corresponding to the protein's molecular weight.  It's a more precise way to confirm the antibody is binding to the *right* protein.  You get a clearer picture of the target's size.
[INFO] Sarah: So, immunohistochemistry is more of a "is it there?" test, while Western blotting is more of a "is it the right size?" test?
[INFO] Joe: Exactly!  You've got it.  And then there's immunoprecipitation.  This is where things get a bit more involved.  Here, we use the antibody to literally fish out the target protein from a complex mixture of proteins.  Think of it like using a magnet to pull out specific metal pieces from a pile of junk.  Once we've isolated the protein, we can then use mass spectrometry to identify it conclusively.  That gives us the ultimate confirmation.
[INFO] Sarah: Wow, mass spectrometry… sounds high-tech.  So, essentially, you're using three different approaches to verify that the antibody is doing what it's supposed to do – binding to the correct protein.  And each method offers a different level of detail and certainty.
[INFO] Joe: Precisely.  It's a multi-layered approach to ensure reliability.  And, you know, even with all these techniques, there's always a degree of uncertainty inherent in the process.  That's why rigorous validation is so crucial in scientific research.  It's not just about getting a result; it's about making sure that result is trustworthy.
[INFO] Sarah: That makes a lot of sense.  It sounds like a lot of work though!  No wonder researchers are always so busy.
[INFO] Joe: (Chuckles)  It is!  But it’s essential to ensure the quality and reliability of the research.  It's all part of the scientific process.
[INFO] Sarah: Absolutely.  Thanks for explaining that so clearly, Joe.  I think our listeners now have a much better understanding of antibody validation.
[INFO] Joe: My pleasure, Sarah. Thank you for joining us on this episode of Science Odyssey, where we explored the groundbreaking research shaping our understanding of the world. If you enjoyed this journey, don't forget to subscribe, leave a review, and share the podcast with fellow science enthusiasts. Until next time, keep exploring the wonders of science—your next discovery awaits!
[INFO] --- End of Conversation ---

[INFO] 
======= Starting Pricing Calculation ======
 -Input text length: 16704
 -Number of Vertex AI responses: 5

[INFO] 
        Input text length: 16704
        Input token count: 3419
        System prompt length: 2718
        System token count: 525
        Total input tokens: 3944
      
[INFO] Response 1 details:
- Length: 3299 characters
- Output tokens: 740
[INFO] Response 2 details:
- Length: 3124 characters
- Output tokens: 691
[INFO] Response 3 details:
- Length: 3453 characters
- Output tokens: 773
[INFO] Response 4 details:
- Length: 3024 characters
- Output tokens: 661
[INFO] Response 5 details:
- Length: 3266 characters
- Output tokens: 759
[INFO] Total TTS characters calculated: 15874
[INFO] 
---***** Final Pricing Calculation Summary **** ---
Total Input Tokens: 3944
Total Output Tokens: 3624
Total Tokens: 7568
Total TTS Characters: 15874
Vertex AI Input Cost: $0.000002
Vertex AI Output Cost: $0.000002
TTS Cost: $0.253984
Total Cost: $0.253988
[INFO] Generating audio files...
[INFO] Audio content written to file "audio-files/0.mp3"
[INFO] Audio content written to file "audio-files/1.mp3"
[INFO] Audio content written to file "audio-files/2.mp3"
[INFO] Audio content written to file "audio-files/3.mp3"
[INFO] Audio content written to file "audio-files/4.mp3"
[INFO] Audio content written to file "audio-files/5.mp3"
[INFO] Audio content written to file "audio-files/6.mp3"
[INFO] Audio content written to file "audio-files/7.mp3"
[INFO] Audio content written to file "audio-files/8.mp3"
[INFO] Audio content written to file "audio-files/9.mp3"
[INFO] Audio content written to file "audio-files/10.mp3"
[INFO] Audio content written to file "audio-files/11.mp3"
[INFO] Audio content written to file "audio-files/12.mp3"
[INFO] Audio content written to file "audio-files/13.mp3"
[INFO] Audio content written to file "audio-files/14.mp3"
[INFO] Audio content written to file "audio-files/15.mp3"
[INFO] Audio content written to file "audio-files/16.mp3"
[INFO] Audio content written to file "audio-files/17.mp3"
[INFO] Audio content written to file "audio-files/18.mp3"
[INFO] Audio content written to file "audio-files/19.mp3"
[INFO] Audio content written to file "audio-files/20.mp3"
[INFO] Audio content written to file "audio-files/21.mp3"
[INFO] Audio content written to file "audio-files/22.mp3"
[INFO] Audio content written to file "audio-files/23.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Audio content written to file "audio-files/24.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Audio content written to file "audio-files/25.mp3"
[INFO] Audio content written to file "audio-files/26.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 115ms
[INFO] Audio content written to file "audio-files/27.mp3"
[INFO] Audio content written to file "audio-files/28.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 117ms
[INFO] Audio content written to file "audio-files/29.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 115ms
[INFO] Audio content written to file "audio-files/30.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Audio content written to file "audio-files/31.mp3"
[INFO] Audio content written to file "audio-files/32.mp3"
[INFO] Audio content written to file "audio-files/33.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Audio content written to file "audio-files/34.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Audio content written to file "audio-files/35.mp3"
[INFO] Audio content written to file "audio-files/36.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 120ms
[INFO] Audio content written to file "audio-files/37.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 115ms
[INFO] Audio content written to file "audio-files/38.mp3"
[INFO] Audio content written to file "audio-files/39.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 116ms
[INFO] Audio content written to file "audio-files/40.mp3"
[INFO] Audio content written to file "audio-files/41.mp3"
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 114ms
[INFO] Audio content written to file "audio-files/42.mp3"
[INFO] GET / 200 in 62ms
[INFO] Audio content written to file "audio-files/43.mp3"
[INFO] GET / 200 in 60ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 304 in 172ms
[INFO] GET / 200 in 189ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 1016ms
[INFO] Audio content written to file "audio-files/44.mp3"
[INFO] Audio content written to file "audio-files/45.mp3"
[INFO] GET / 200 in 110ms
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 304 in 172ms
[INFO] Audio content written to file "audio-files/46.mp3"
[INFO] GET / 200 in 60ms
[INFO] GET / 200 in 60ms
[INFO] GET /@vite/client 304 in 57ms
[INFO] Audio content written to file "audio-files/47.mp3"
[INFO] GET /src/main.tsx 304 in 114ms
[INFO] GET /@react-refresh 304 in 58ms
[INFO] GET /@vite-plugin-checker-runtime 304 in 103ms
[INFO] GET /src/components/ui/toaster.tsx 304 in 87ms
[INFO] GET /@fs/home/runner/PodCasterella/node_modules/vite/dist/client/env.mjs 304 in 129ms
[INFO] GET /src/pages/PricingPage.tsx 304 in 171ms
[INFO] GET /src/pages/LibraryPage.tsx 304 in 227ms
[INFO] GET /src/index.css 304 in 241ms
[INFO] GET /src/lib/queryClient.ts 304 in 280ms
[INFO] GET /src/pages/AuthPage.tsx 304 in 299ms
[INFO] GET /src/pages/AdminPage.tsx 304 in 295ms
[INFO] GET /src/pages/HomePage.tsx 304 in 295ms
[INFO] GET /src/pages/ProfilePage.tsx 304 in 296ms
[INFO] GET /src/pages/BillingPage.tsx 304 in 290ms
[INFO] GET /src/hooks/use-user.ts 304 in 296ms
[INFO] GET /src/components/Sidebar.tsx 304 in 297ms
[INFO] GET /src/components/ui/button.tsx 304 in 295ms
[INFO] GET /src/pages/ForgotPasswordPage.tsx 304 in 299ms
[INFO] GET /src/components/ui/toast.tsx 304 in 300ms
[INFO] GET /src/hooks/use-toast.ts 304 in 299ms
[INFO] GET /src/components/AudioPlayer.tsx 304 in 300ms
[INFO] GET /src/components/ui/alert-dialog.tsx 304 in 298ms
[INFO] GET /src/hooks/use-audio.ts 304 in 299ms
[INFO] GET /src/lib/utils.ts 304 in 299ms
[INFO] GET /src/components/ui/form.tsx 304 in 301ms
[INFO] GET /@fs/home/runner/PodCasterella/db/schema.ts 304 in 300ms
[INFO] GET /src/components/ui/input.tsx 304 in 302ms
[INFO] GET /src/components/ui/card.tsx 304 in 298ms
[INFO] GET /src/components/ui/tabs.tsx 304 in 299ms
[INFO] GET /src/hooks/use-tts.ts 304 in 295ms
[INFO] GET /src/components/Logo.tsx 304 in 301ms
[INFO] GET /src/components/UsageProgress.tsx 304 in 249ms
[INFO] GET /src/components/ui/collapsible.tsx 304 in 298ms
[INFO] GET /src/components/ui/avatar.tsx 304 in 299ms
[INFO] GET /src/components/PaymentModal.tsx 304 in 303ms
[INFO] GET /src/components/LoadingScreen.tsx 304 in 326ms
[INFO] GET /src/components/ui/separator.tsx 304 in 333ms
[INFO] GET /src/components/ui/scroll-area.tsx 304 in 335ms
[INFO] GET /src/components/ui/slider.tsx 304 in 336ms
[INFO] GET /src/components/ui/select.tsx 304 in 343ms
[INFO] GET /src/components/ui/popover.tsx 304 in 344ms
[INFO] GET /src/components/ui/label.tsx 304 in 316ms
[INFO] GET /src/components/ui/progress.tsx 304 in 317ms
[INFO] GET /src/components/ui/dialog.tsx 304 in 312ms
[INFO] GET /api/user 304 in 58ms
[INFO] GET / 200 in 60ms
[INFO] GET / 200 in 102ms
[INFO] GET /api/playlists 304 in 254ms
[INFO] GET /api/podcasts 304 in 264ms
[INFO] Audio content written to file "audio-files/48.mp3"
[INFO] Audio content written to file "audio-files/49.mp3"
[INFO] Audio content written to file "audio-files/50.mp3"
[INFO] Audio content written to file "audio-files/51.mp3"
[INFO] Audio content written to file "audio-files/52.mp3"
[INFO] Audio content written to file "audio-files/53.mp3"
[INFO] Audio content written to file "audio-files/54.mp3"
[INFO] Copied intro file podcast.mp3 to audio folder
[INFO] Merging the following files in order:
[INFO] 0.mp3
[INFO] 1.mp3
[INFO] 2.mp3
[INFO] 3.mp3
[INFO] 4.mp3
[INFO] 5.mp3
[INFO] 6.mp3
[INFO] 7.mp3
[INFO] 8.mp3
[INFO] 9.mp3
[INFO] 10.mp3
[INFO] 11.mp3
[INFO] 12.mp3
[INFO] 13.mp3
[INFO] 14.mp3
[INFO] 15.mp3
[INFO] 16.mp3
[INFO] 17.mp3
[INFO] 18.mp3
[INFO] 19.mp3
[INFO] 20.mp3
[INFO] 21.mp3
[INFO] 22.mp3
[INFO] 23.mp3
[INFO] 24.mp3
[INFO] 25.mp3
[INFO] 26.mp3
[INFO] 27.mp3
[INFO] 28.mp3
[INFO] 29.mp3
[INFO] 30.mp3
[INFO] 31.mp3
[INFO] 32.mp3
[INFO] 33.mp3
[INFO] 34.mp3
[INFO] 35.mp3
[INFO] 36.mp3
[INFO] 37.mp3
[INFO] 38.mp3
[INFO] 39.mp3
[INFO] 40.mp3
[INFO] 41.mp3
[INFO] 42.mp3
[INFO] 43.mp3
[INFO] 44.mp3
[INFO] 45.mp3
[INFO] 46.mp3
[INFO] 47.mp3
[INFO] 48.mp3
[INFO] 49.mp3
[INFO] 50.mp3
[INFO] 51.mp3
[INFO] 52.mp3
[INFO] 54.mp3
[INFO] 53.mp3
[INFO] Successfully merged audio saved as audio-files/final_output.mp3
[INFO] Cleaned up audio-files directory after successful generation
[INFO] Audio generation completed: Duration: 778s Actual tokens used: 7568 Actual cost: 0.253987784
[INFO] 

---------- Updated Usage ----------
 Updated usage for user 24:
 Articles: 2/3
 Podify Tokens: 265/10000
[INFO] Successfully saved audio file (audio/mpeg) to Object Storage: 1735677566488-article.mp3
[INFO] Successfully created podcast entry with ID: 29
[INFO] GET / 200 in 60ms
[INFO] Usage check for user: canceled
[INFO] GET /api/user/usage/check 200 in 170ms
[INFO] GET / 200 in 113ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] GET /api/podcasts 200 in 228ms
[INFO] GET /api/audio/stream/1735659091645-article.mp3 200 in 750ms
[INFO] 
========Streaming audio file: 1735677566488-article.mp3
[INFO] HEAD /api/audio/stream/1735677566488-article.mp3 200 in 485ms
[INFO] 
========Streaming audio file: 1735677566488-article.mp3
[INFO] GET / 200 in 78ms
[INFO] GET /api/audio/stream/1735677566488-article.mp3 200 in 705ms
[INFO] 
========Streaming audio file: 1735659091645-article.mp3
[INFO] HEAD /api/audio/stream/1735659091645-article.mp3 200 in 517ms
[INFO] 
========Streaming audio file: 1735677566488-article.mp3
[INFO] HEAD /api/audio/stream/1735677566488-article.mp3 200 in 417ms
[INFO] 
========Streaming audio file: 1735677566488-article.mp3
[INFO] GET /api/audio/stream/1735677566488-article.mp3 200 in 617ms
